var t = require("../@babel/runtime/helpers/typeof");

exports.fmNavi = function(i) {
    var n = {};
    function e(t) {
        var r;
        return (n[t] || (r = n[t] = {
            i: t,
            l: !1,
            exports: {}
        }, i[t].call(r.exports, r, r.exports, e), r.l = !0, r)).exports;
    }
    return e.m = i, e.c = n, e.d = function(t, i, n) {
        e.o(t, i) || Object.defineProperty(t, i, {
            enumerable: !0,
            get: n
        });
    }, e.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "h", {
            value: !0
        });
    }, e.t = function(i, n) {
        if (1 & n && (i = e(i)), 8 & n) return i;
        if (4 & n && "object" == t(i) && i && i.h) return i;
        var r = Object.create(null);
        if (e.r(r), Object.defineProperty(r, "default", {
            enumerable: !0,
            value: i
        }), 2 & n && "string" != typeof i) for (var s in i) e.d(r, s, function(t) {
            return i[t];
        }.bind(null, s));
        return r;
    }, e.n = function(t) {
        var i = t && t.h ? function() {
            return t.default;
        } : function() {
            return t;
        };
        return e.d(i, "a", i), i;
    }, e.o = function(t, i) {
        return Object.prototype.hasOwnProperty.call(t, i);
    }, e.p = "", e(e.s = 3);
}([ function(t, i, n) {
    var e = n(1);
    n = n(2);
    t.exports = {
        atob: e,
        btoa: n
    };
}, function(t, i, n) {
    var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    t.exports = function(t) {
        if (0 === arguments.length) throw new TypeError("1 argument required, but only 0 present.");
        if ((t = (t = (t = "" + t).replace(/[ \t\n\f\r]/g, "")).length % 4 == 0 ? t.replace(/==?$/, "") : t).length % 4 == 1 || /[^+/0-9A-Za-z]/.test(t)) return null;
        for (var i = "", n = 0, r = 0, s = 0; s < t.length; s++) n = (n <<= 6) | function(t) {
            return (t = e.indexOf(t)) < 0 ? void 0 : t;
        }(t[s]), 24 === (r += 6) && (i = (i = (i += String.fromCharCode((16711680 & n) >> 16)) + String.fromCharCode((65280 & n) >> 8)) + String.fromCharCode(255 & n), 
        n = r = 0);
        return 12 === r ? (n >>= 4, i += String.fromCharCode(n)) : 18 === r && (n >>= 2, 
        i = (i += String.fromCharCode((65280 & n) >> 8)) + String.fromCharCode(255 & n)), 
        i;
    };
}, function(t, i, n) {
    var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    t.exports = function(t) {
        if (0 === arguments.length) throw new TypeError("1 argument required, but only 0 present.");
        var i;
        for (t = "" + t, i = 0; i < t.length; i++) if (255 < t.charCodeAt(i)) return null;
        var n = "";
        for (i = 0; i < t.length; i += 3) {
            var r = [ void 0, void 0, void 0, void 0 ];
            r[0] = t.charCodeAt(i) >> 2, r[1] = (3 & t.charCodeAt(i)) << 4, t.length > i + 1 && (r[1] |= t.charCodeAt(i + 1) >> 4, 
            r[2] = (15 & t.charCodeAt(i + 1)) << 2), t.length > i + 2 && (r[2] |= t.charCodeAt(i + 2) >> 6, 
            r[3] = 63 & t.charCodeAt(i + 2));
            for (var s = 0; s < r.length; s++) void 0 === r[s] ? n += "=" : n += function(t) {
                if (0 <= t && t < 64) return e[t];
            }(r[s]);
        }
        return n;
    };
}, function(i, n, e) {
    e.r(n);
    var r = {
        MODULE_SHORTEST: 1,
        MODULE_BEST: 2
    }, s = {
        PRIORITY_DEFAULT: 1,
        PRIORITY_LIFTFIRST: 2,
        PRIORITY_ESCALATORFIRST: 3,
        PRIORITY_STAIRFIRST: 4,
        PRIORITY_LIFTONLY: 5,
        PRIORITY_ESCALATORONLY: 6,
        PRIORITY_STAIRONLY: 7,
        PRIORITY_ACCESSIBLEONLY: 8,
        PRIORITY_LIFTFIRST1: 9,
        PRIORITY_ESCALATORFIRST1: 10,
        PRIORITY_STAIRFIRST1: 11
    }, o = {
        ZH: "zh",
        EN: "en"
    }, h = {
        Auto: 1,
        SpecifiedDistance: 2
    };
    function a(i) {
        return (a = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function u(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != a(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != a(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == a(t) ? t : String(t);
            }(e.key), e);
        }
    }
    var l = function(t, i, n) {
        return i && u(t.prototype, i), n && u(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t;
    }(function t() {
        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
    }), c = (Object.assign(l.prototype, {
        u: function(t, i) {
            void 0 === this.v && (this.v = {});
            var n = this.v;
            void 0 === n[t] && (n[t] = []), -1 === n[t].indexOf(i) && n[t].push(i);
        },
        M: function(t, i) {
            var n;
            return void 0 !== this.v && void 0 !== (n = this.v)[t] && -1 !== n[t].indexOf(i);
        },
        k: function(t, i) {
            var n;
            void 0 !== this.v && void 0 !== (t = this.v[t]) && -1 !== (n = t.indexOf(i)) && t.splice(n, 1);
        },
        g: function(t) {
            if (void 0 !== this.v) {
                var i = this.v[t.type];
                if (void 0 !== i) for (var n = i.slice(0), e = 0, r = n.length; e < r; e++) n[e].call(this, t);
            }
        }
    }), l);
    function y(i) {
        return (y = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function f(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != y(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != y(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == y(t) ? t : String(t);
            }(e.key), e);
        }
    }
    var v = function() {
        function t(i) {
            if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
            this.autoStart = void 0 === i || i, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, 
            this.running = !1;
        }
        var i, n;
        return i = t, (n = [ {
            key: "start",
            value: function() {
                this.startTime = x(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
            }
        }, {
            key: "stop",
            value: function() {
                this.getElapsedTime(), this.running = !1, this.autoStart = !1;
            }
        }, {
            key: "getElapsedTime",
            value: function() {
                return this.getDelta(), this.elapsedTime;
            }
        }, {
            key: "getDelta",
            value: function() {
                var t, i = 0;
                return this.autoStart && !this.running ? (this.start(), 0) : (this.running && (i = ((t = x()) - this.oldTime) / 1e3, 
                this.oldTime = t, this.elapsedTime += i), i);
            }
        } ]) && f(i.prototype, n), Object.defineProperty(i, "prototype", {
            writable: !1
        }), t;
    }();
    function x() {
        return ("undefined" == typeof performance ? Date : performance).now();
    }
    for (var p = [], d = 0; d < 256; d++) p[d] = (d < 16 ? "0" : "") + d.toString(16);
    var m = 1234567, b = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            var t = 4294967295 * Math.random() | 0, i = 4294967295 * Math.random() | 0, n = 4294967295 * Math.random() | 0, e = 4294967295 * Math.random() | 0;
            return (p[255 & t] + p[t >> 8 & 255] + p[t >> 16 & 255] + p[t >> 24 & 255] + "-" + p[255 & i] + p[i >> 8 & 255] + "-" + p[i >> 16 & 15 | 64] + p[i >> 24 & 255] + "-" + p[63 & n | 128] + p[n >> 8 & 255] + "-" + p[n >> 16 & 255] + p[n >> 24 & 255] + p[255 & e] + p[e >> 8 & 255] + p[e >> 16 & 255] + p[e >> 24 & 255]).toUpperCase();
        },
        clamp: function(t, i, n) {
            return Math.max(i, Math.min(n, t));
        },
        euclideanModulo: function(t, i) {
            return (t % i + i) % i;
        },
        mapLinear: function(t, i, n, e, r) {
            return e + (t - i) * (r - e) / (n - i);
        },
        lerp: function(t, i, n) {
            return (1 - n) * t + n * i;
        },
        smoothstep: function(t, i, n) {
            return t <= i ? 0 : n <= t ? 1 : (t = (t - i) / (n - i)) * t * (3 - 2 * t);
        },
        smootherstep: function(t, i, n) {
            return t <= i ? 0 : n <= t ? 1 : (t = (t - i) / (n - i)) * t * t * (t * (6 * t - 15) + 10);
        },
        randInt: function(t, i) {
            return t + Math.floor(Math.random() * (i - t + 1));
        },
        randFloat: function(t, i) {
            return t + Math.random() * (i - t);
        },
        randFloatSpread: function(t) {
            return t * (.5 - Math.random());
        },
        seededRandom: function(t) {
            return ((m = 16807 * (m = void 0 !== t ? t % 2147483647 : m) % 2147483647) - 1) / 2147483646;
        },
        degToRad: function(t) {
            return t * b.DEG2RAD;
        },
        radToDeg: function(t) {
            return t * b.RAD2DEG;
        },
        isPowerOfTwo: function(t) {
            return 0 == (t & t - 1) && 0 !== t;
        },
        ceilPowerOfTwo: function(t) {
            return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
        },
        floorPowerOfTwo: function(t) {
            return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
        },
        setQuaternionFromProperEuler: function(t, i, n, e, r) {
            var s = Math.cos, o = Math.sin, h = s(n / 2), a = o(n / 2), u = s((i + e) / 2), l = o((i + e) / 2), c = s((i - e) / 2), y = o((i - e) / 2), f = s((e - i) / 2), v = o((e - i) / 2);
            switch (r) {
              case "XYX":
                t.set(h * l, a * c, a * y, h * u);
                break;

              case "YZY":
                t.set(a * y, h * l, a * c, h * u);
                break;

              case "ZXZ":
                t.set(a * c, a * y, h * l, h * u);
                break;

              case "XZX":
                t.set(h * l, a * v, a * f, h * u);
                break;

              case "YXY":
                t.set(a * f, h * l, a * v, h * u);
                break;

              case "ZYZ":
                t.set(a * v, a * f, h * l, h * u);
                break;

              default:
                console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + r);
            }
        }
    };
    function g(i) {
        return (g = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function M(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != g(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != g(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == g(t) ? t : String(t);
            }(e.key), e);
        }
    }
    function w(i) {
        return (w = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function k(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != w(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != w(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == w(t) ? t : String(t);
            }(e.key), e);
        }
    }
    l = function() {
        function t() {
            var i = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, e = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 1, s = this, o = t;
            if (!(s instanceof o)) throw new TypeError("Cannot call a class as a function");
            Object.defineProperty(this, "isQuaternion", {
                value: !0
            }), this.S = i, this._ = n, this.O = e, this.j = r;
        }
        var i, n, e;
        return i = t, e = [ {
            key: "slerp",
            value: function(t, i, n, e) {
                return n.copy(t).slerp(i, e);
            }
        }, {
            key: "slerpFlat",
            value: function(t, i, n, e, r, s, o) {
                var h, a, u, l = n[e + 0], c = n[e + 1], y = n[e + 2], f = (n = n[e + 3], e = r[s + 0], 
                r[s + 1]), v = r[s + 2];
                n === (r = r[s + 3]) && l === e && c === f && y === v || (s = 1 - o, h = 0 <= (a = l * e + c * f + y * v + n * r) ? 1 : -1, 
                (u = 1 - a * a) > Number.EPSILON && (u = Math.sqrt(u), a = Math.atan2(u, a * h), 
                s = Math.sin(s * a) / u, o = Math.sin(o * a) / u), l = l * s + e * (a = o * h), 
                c = c * s + f * a, y = y * s + v * a, n = n * s + r * a, s === 1 - o && (l *= u = 1 / Math.sqrt(l * l + c * c + y * y + n * n), 
                c *= u, y *= u, n *= u)), t[i] = l, t[i + 1] = c, t[i + 2] = y, t[i + 3] = n;
            }
        }, {
            key: "multiplyQuaternionsFlat",
            value: function(t, i, n, e, r, s) {
                var o = n[e], h = n[e + 1], a = n[e + 2], u = (n = n[e + 3], e = r[s], r[s + 1]), l = r[s + 2];
                r = r[s + 3];
                return t[i] = o * r + n * e + h * l - a * u, t[i + 1] = h * r + n * u + a * e - o * l, 
                t[i + 2] = a * r + n * l + o * u - h * e, t[i + 3] = n * r - o * e - h * u - a * l, 
                t;
            }
        } ], (n = [ {
            key: "x",
            get: function() {
                return this.S;
            },
            set: function(t) {
                this.S = t, this.T();
            }
        }, {
            key: "y",
            get: function() {
                return this._;
            },
            set: function(t) {
                this._ = t, this.T();
            }
        }, {
            key: "z",
            get: function() {
                return this.O;
            },
            set: function(t) {
                this.O = t, this.T();
            }
        }, {
            key: "w",
            get: function() {
                return this.j;
            },
            set: function(t) {
                this.j = t, this.T();
            }
        }, {
            key: "set",
            value: function(t, i, n, e) {
                return this.S = t, this._ = i, this.O = n, this.j = e, this.T(), this;
            }
        }, {
            key: "clone",
            value: function() {
                return new this.constructor(this.S, this._, this.O, this.j);
            }
        }, {
            key: "copy",
            value: function(t) {
                return this.S = t.x, this._ = t.y, this.O = t.z, this.j = t.w, this.T(), this;
            }
        }, {
            key: "setFromEuler",
            value: function(t, i) {
                if (!t || !t.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                var n = t.S, e = t._, r = t.O, s = t._order, o = (t = Math.cos, Math.sin), h = t(n / 2), a = t(e / 2), u = t(r / 2), l = o(n / 2), c = o(e / 2), y = o(r / 2);
                switch (s) {
                  case "XYZ":
                    this.S = l * a * u + h * c * y, this._ = h * c * u - l * a * y, this.O = h * a * y + l * c * u, 
                    this.j = h * a * u - l * c * y;
                    break;

                  case "YXZ":
                    this.S = l * a * u + h * c * y, this._ = h * c * u - l * a * y, this.O = h * a * y - l * c * u, 
                    this.j = h * a * u + l * c * y;
                    break;

                  case "ZXY":
                    this.S = l * a * u - h * c * y, this._ = h * c * u + l * a * y, this.O = h * a * y + l * c * u, 
                    this.j = h * a * u - l * c * y;
                    break;

                  case "ZYX":
                    this.S = l * a * u - h * c * y, this._ = h * c * u + l * a * y, this.O = h * a * y - l * c * u, 
                    this.j = h * a * u + l * c * y;
                    break;

                  case "YZX":
                    this.S = l * a * u + h * c * y, this._ = h * c * u + l * a * y, this.O = h * a * y - l * c * u, 
                    this.j = h * a * u - l * c * y;
                    break;

                  case "XZY":
                    this.S = l * a * u - h * c * y, this._ = h * c * u - l * a * y, this.O = h * a * y + l * c * u, 
                    this.j = h * a * u + l * c * y;
                    break;

                  default:
                    console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + s);
                }
                return !1 !== i && this.T(), this;
            }
        }, {
            key: "setFromAxisAngle",
            value: function(t, i) {
                i /= 2;
                var n = Math.sin(i);
                return this.S = t.x * n, this._ = t.y * n, this.O = t.z * n, this.j = Math.cos(i), 
                this.T(), this;
            }
        }, {
            key: "setFromRotationMatrix",
            value: function(t) {
                var i = (t = t.elements)[0], n = t[4], e = t[8], r = t[1], s = t[5], o = t[9], h = t[2], a = t[6], u = i + s + (t = t[10]);
                return 0 < u ? (u = .5 / Math.sqrt(u + 1), this.j = .25 / u, this.S = (a - o) * u, 
                this._ = (e - h) * u, this.O = (r - n) * u) : s < i && t < i ? (u = 2 * Math.sqrt(1 + i - s - t), 
                this.j = (a - o) / u, this.S = .25 * u, this._ = (n + r) / u, this.O = (e + h) / u) : t < s ? (u = 2 * Math.sqrt(1 + s - i - t), 
                this.j = (e - h) / u, this.S = (n + r) / u, this._ = .25 * u, this.O = (o + a) / u) : (u = 2 * Math.sqrt(1 + t - i - s), 
                this.j = (r - n) / u, this.S = (e + h) / u, this._ = (o + a) / u, this.O = .25 * u), 
                this.T(), this;
            }
        }, {
            key: "setFromUnitVectors",
            value: function(t, i) {
                var n = t.dot(i) + 1;
                return n < 1e-6 ? (n = 0, Math.abs(t.x) > Math.abs(t.z) ? (this.S = -t.y, this._ = t.x, 
                this.O = 0) : (this.S = 0, this._ = -t.z, this.O = t.y)) : (this.S = t.y * i.z - t.z * i.y, 
                this._ = t.z * i.x - t.x * i.z, this.O = t.x * i.y - t.y * i.x), this.j = n, this.normalize();
            }
        }, {
            key: "angleTo",
            value: function(t) {
                return 2 * Math.acos(Math.abs(b.clamp(this.dot(t), -1, 1)));
            }
        }, {
            key: "rotateTowards",
            value: function(t, i) {
                var n = this.angleTo(t);
                return 0 !== n && (i = Math.min(1, i / n), this.slerp(t, i)), this;
            }
        }, {
            key: "identity",
            value: function() {
                return this.set(0, 0, 0, 1);
            }
        }, {
            key: "invert",
            value: function() {
                return this.conjugate();
            }
        }, {
            key: "conjugate",
            value: function() {
                return this.S *= -1, this._ *= -1, this.O *= -1, this.T(), this;
            }
        }, {
            key: "dot",
            value: function(t) {
                return this.S * t.S + this._ * t._ + this.O * t.O + this.j * t.j;
            }
        }, {
            key: "lengthSq",
            value: function() {
                return this.S * this.S + this._ * this._ + this.O * this.O + this.j * this.j;
            }
        }, {
            key: "length",
            value: function() {
                return Math.sqrt(this.S * this.S + this._ * this._ + this.O * this.O + this.j * this.j);
            }
        }, {
            key: "normalize",
            value: function() {
                var t = this.length();
                return 0 === t ? (this.S = 0, this._ = 0, this.O = 0, this.j = 1) : (this.S = this.S * (t = 1 / t), 
                this._ = this._ * t, this.O = this.O * t, this.j = this.j * t), this.T(), this;
            }
        }, {
            key: "multiply",
            value: function(t, i) {
                return void 0 !== i ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), 
                this.multiplyQuaternions(t, i)) : this.multiplyQuaternions(this, t);
            }
        }, {
            key: "premultiply",
            value: function(t) {
                return this.multiplyQuaternions(t, this);
            }
        }, {
            key: "multiplyQuaternions",
            value: function(t, i) {
                var n = t.S, e = t._, r = t.O, s = (t = t.j, i.S), o = i._, h = i.O;
                i = i.j;
                return this.S = n * i + t * s + e * h - r * o, this._ = e * i + t * o + r * s - n * h, 
                this.O = r * i + t * h + n * o - e * s, this.j = t * i - n * s - e * o - r * h, 
                this.T(), this;
            }
        }, {
            key: "slerp",
            value: function(t, i) {
                if (0 !== i) {
                    if (1 === i) return this.copy(t);
                    var n, e = this.S, r = this._, s = this.O, o = this.j, h = o * t.j + e * t.S + r * t._ + s * t.O;
                    h < 0 ? (this.j = -t.j, this.S = -t.S, this._ = -t._, this.O = -t.O, h = -h) : this.copy(t), 
                    1 <= h ? (this.j = o, this.S = e, this._ = r, this.O = s) : ((t = 1 - h * h) <= Number.EPSILON ? (this.j = (n = 1 - i) * o + i * this.j, 
                    this.S = n * e + i * this.S, this._ = n * r + i * this._, this.O = n * s + i * this.O, 
                    this.normalize()) : (n = Math.sqrt(t), t = Math.atan2(n, h), h = Math.sin((1 - i) * t) / n, 
                    i = Math.sin(i * t) / n, this.j = o * h + this.j * i, this.S = e * h + this.S * i, 
                    this._ = r * h + this._ * i, this.O = s * h + this.O * i), this.T());
                }
                return this;
            }
        }, {
            key: "equals",
            value: function(t) {
                return t.S === this.S && t._ === this._ && t.O === this.O && t.j === this.j;
            }
        }, {
            key: "fromArray",
            value: function(t) {
                var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                return this.S = t[i], this._ = t[i + 1], this.O = t[i + 2], this.j = t[i + 3], this.T(), 
                this;
            }
        }, {
            key: "toArray",
            value: function() {
                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                return t[i] = this.S, t[i + 1] = this._, t[i + 2] = this.O, t[i + 3] = this.j, t;
            }
        }, {
            key: "fromBufferAttribute",
            value: function(t, i) {
                return this.S = t.getX(i), this._ = t.getY(i), this.O = t.getZ(i), this.j = t.getW(i), 
                this;
            }
        }, {
            key: "_onChange",
            value: function(t) {
                return this.T = t, this;
            }
        }, {
            key: "_onChangeCallback",
            value: function() {}
        } ]) && M(i.prototype, n), e && M(i, e), Object.defineProperty(i, "prototype", {
            writable: !1
        }), t;
    }();
    var S = function() {
        function t() {
            var i = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, e = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, r = this, s = t;
            if (!(r instanceof s)) throw new TypeError("Cannot call a class as a function");
            Object.defineProperty(this, "isVector3", {
                value: !0
            }), this.x = i, this.y = n, this.z = e;
        }
        var i, n;
        return i = t, (n = [ {
            key: "set",
            value: function(t, i, n) {
                return void 0 === n && (n = this.z), this.x = t, this.y = i, this.z = n, this;
            }
        }, {
            key: "setScalar",
            value: function(t) {
                return this.x = t, this.y = t, this.z = t, this;
            }
        }, {
            key: "setX",
            value: function(t) {
                return this.x = t, this;
            }
        }, {
            key: "setY",
            value: function(t) {
                return this.y = t, this;
            }
        }, {
            key: "setZ",
            value: function(t) {
                return this.z = t, this;
            }
        }, {
            key: "setComponent",
            value: function(t, i) {
                switch (t) {
                  case 0:
                    this.x = i;
                    break;

                  case 1:
                    this.y = i;
                    break;

                  case 2:
                    this.z = i;
                    break;

                  default:
                    throw new Error("index is out of range: " + t);
                }
                return this;
            }
        }, {
            key: "getComponent",
            value: function(t) {
                switch (t) {
                  case 0:
                    return this.x;

                  case 1:
                    return this.y;

                  case 2:
                    return this.z;

                  default:
                    throw new Error("index is out of range: " + t);
                }
            }
        }, {
            key: "clone",
            value: function() {
                return new this.constructor(this.x, this.y, this.z);
            }
        }, {
            key: "copy",
            value: function(t) {
                return this.x = t.x, this.y = t.y, this.z = t.z, this;
            }
        }, {
            key: "add",
            value: function(t, i) {
                return void 0 !== i ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), 
                this.addVectors(t, i)) : (this.x += t.x, this.y += t.y, this.z += t.z, this);
            }
        }, {
            key: "addScalar",
            value: function(t) {
                return this.x += t, this.y += t, this.z += t, this;
            }
        }, {
            key: "addVectors",
            value: function(t, i) {
                return this.x = t.x + i.x, this.y = t.y + i.y, this.z = t.z + i.z, this;
            }
        }, {
            key: "addScaledVector",
            value: function(t, i) {
                return this.x += t.x * i, this.y += t.y * i, this.z += t.z * i, this;
            }
        }, {
            key: "sub",
            value: function(t, i) {
                return void 0 !== i ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), 
                this.subVectors(t, i)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this);
            }
        }, {
            key: "subScalar",
            value: function(t) {
                return this.x -= t, this.y -= t, this.z -= t, this;
            }
        }, {
            key: "subVectors",
            value: function(t, i) {
                return this.x = t.x - i.x, this.y = t.y - i.y, this.z = t.z - i.z, this;
            }
        }, {
            key: "multiply",
            value: function(t, i) {
                return void 0 !== i ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), 
                this.multiplyVectors(t, i)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this);
            }
        }, {
            key: "multiplyScalar",
            value: function(t) {
                return this.x *= t, this.y *= t, this.z *= t, this;
            }
        }, {
            key: "multiplyVectors",
            value: function(t, i) {
                return this.x = t.x * i.x, this.y = t.y * i.y, this.z = t.z * i.z, this;
            }
        }, {
            key: "applyEuler",
            value: function(t) {
                return t && t.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), 
                this.applyQuaternion(T.setFromEuler(t));
            }
        }, {
            key: "applyAxisAngle",
            value: function(t, i) {
                return this.applyQuaternion(T.setFromAxisAngle(t, i));
            }
        }, {
            key: "applyMatrix3",
            value: function(t) {
                var i = this.x, n = this.y, e = this.z;
                t = t.elements;
                return this.x = t[0] * i + t[3] * n + t[6] * e, this.y = t[1] * i + t[4] * n + t[7] * e, 
                this.z = t[2] * i + t[5] * n + t[8] * e, this;
            }
        }, {
            key: "applyNormalMatrix",
            value: function(t) {
                return this.applyMatrix3(t).normalize();
            }
        }, {
            key: "applyMatrix4",
            value: function(t) {
                var i = this.x, n = this.y, e = this.z, r = 1 / ((t = t.elements)[3] * i + t[7] * n + t[11] * e + t[15]);
                return this.x = (t[0] * i + t[4] * n + t[8] * e + t[12]) * r, this.y = (t[1] * i + t[5] * n + t[9] * e + t[13]) * r, 
                this.z = (t[2] * i + t[6] * n + t[10] * e + t[14]) * r, this;
            }
        }, {
            key: "applyQuaternion",
            value: function(t) {
                var i = this.x, n = this.y, e = this.z, r = t.x, s = t.y, o = t.z, h = (t = t.w) * i + s * e - o * n, a = t * n + o * i - r * e, u = t * e + r * n - s * i;
                i = -r * i - s * n - o * e;
                return this.x = h * t + i * -r + a * -o - u * -s, this.y = a * t + i * -s + u * -r - h * -o, 
                this.z = u * t + i * -o + h * -s - a * -r, this;
            }
        }, {
            key: "project",
            value: function(t) {
                return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix);
            }
        }, {
            key: "unproject",
            value: function(t) {
                return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld);
            }
        }, {
            key: "transformDirection",
            value: function(t) {
                var i = this.x, n = this.y, e = this.z;
                t = t.elements;
                return this.x = t[0] * i + t[4] * n + t[8] * e, this.y = t[1] * i + t[5] * n + t[9] * e, 
                this.z = t[2] * i + t[6] * n + t[10] * e, this.normalize();
            }
        }, {
            key: "divide",
            value: function(t) {
                return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;
            }
        }, {
            key: "divideScalar",
            value: function(t) {
                return this.multiplyScalar(1 / t);
            }
        }, {
            key: "min",
            value: function(t) {
                return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), 
                this;
            }
        }, {
            key: "max",
            value: function(t) {
                return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), 
                this;
            }
        }, {
            key: "clamp",
            value: function(t, i) {
                return this.x = Math.max(t.x, Math.min(i.x, this.x)), this.y = Math.max(t.y, Math.min(i.y, this.y)), 
                this.z = Math.max(t.z, Math.min(i.z, this.z)), this;
            }
        }, {
            key: "clampScalar",
            value: function(t, i) {
                return this.x = Math.max(t, Math.min(i, this.x)), this.y = Math.max(t, Math.min(i, this.y)), 
                this.z = Math.max(t, Math.min(i, this.z)), this;
            }
        }, {
            key: "clampLength",
            value: function(t, i) {
                var n = this.length();
                return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(i, n)));
            }
        }, {
            key: "floor",
            value: function() {
                return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), 
                this;
            }
        }, {
            key: "ceil",
            value: function() {
                return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), 
                this;
            }
        }, {
            key: "round",
            value: function() {
                return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), 
                this;
            }
        }, {
            key: "roundToZero",
            value: function() {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), 
                this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
            }
        }, {
            key: "negate",
            value: function() {
                return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
            }
        }, {
            key: "dot",
            value: function(t) {
                return this.x * t.x + this.y * t.y + this.z * t.z;
            }
        }, {
            key: "lengthSq",
            value: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z;
            }
        }, {
            key: "length",
            value: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
            }
        }, {
            key: "manhattanLength",
            value: function() {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
            }
        }, {
            key: "normalize",
            value: function() {
                return this.divideScalar(this.length() || 1);
            }
        }, {
            key: "setLength",
            value: function(t) {
                return this.normalize().multiplyScalar(t);
            }
        }, {
            key: "lerp",
            value: function(t, i) {
                return this.x += (t.x - this.x) * i, this.y += (t.y - this.y) * i, this.z += (t.z - this.z) * i, 
                this;
            }
        }, {
            key: "lerpVectors",
            value: function(t, i, n) {
                return this.x = t.x + (i.x - t.x) * n, this.y = t.y + (i.y - t.y) * n, this.z = t.z + (i.z - t.z) * n, 
                this;
            }
        }, {
            key: "cross",
            value: function(t, i) {
                return void 0 !== i ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), 
                this.crossVectors(t, i)) : this.crossVectors(this, t);
            }
        }, {
            key: "crossVectors",
            value: function(t, i) {
                var n = t.x, e = t.y, r = (t = t.z, i.x), s = i.y;
                i = i.z;
                return this.x = e * i - t * s, this.y = t * r - n * i, this.z = n * s - e * r, this;
            }
        }, {
            key: "projectOnVector",
            value: function(t) {
                var i = t.lengthSq();
                return 0 === i ? this.set(0, 0, 0) : (i = t.dot(this) / i, this.copy(t).multiplyScalar(i));
            }
        }, {
            key: "projectOnPlane",
            value: function(t) {
                return O.copy(this).projectOnVector(t), this.sub(O);
            }
        }, {
            key: "reflect",
            value: function(t) {
                return this.sub(O.copy(t).multiplyScalar(2 * this.dot(t)));
            }
        }, {
            key: "angleTo",
            value: function(t) {
                var i = Math.sqrt(this.lengthSq() * t.lengthSq());
                return 0 === i ? Math.PI / 2 : (t = this.dot(t) / i, Math.acos(b.clamp(t, -1, 1)));
            }
        }, {
            key: "distanceTo",
            value: function(t) {
                return Math.sqrt(this.distanceToSquared(t));
            }
        }, {
            key: "distanceToSquared",
            value: function(t) {
                var i = this.x - t.x, n = this.y - t.y;
                return i * i + n * n + (t = this.z - t.z) * t;
            }
        }, {
            key: "manhattanDistanceTo",
            value: function(t) {
                return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
            }
        }, {
            key: "setFromSpherical",
            value: function(t) {
                return this.setFromSphericalCoords(t.radius, t.phi, t.theta);
            }
        }, {
            key: "setFromSphericalCoords",
            value: function(t, i, n) {
                var e = Math.sin(i) * t;
                return this.x = e * Math.sin(n), this.y = Math.cos(i) * t, this.z = e * Math.cos(n), 
                this;
            }
        }, {
            key: "setFromCylindrical",
            value: function(t) {
                return this.setFromCylindricalCoords(t.radius, t.theta, t.y);
            }
        }, {
            key: "setFromCylindricalCoords",
            value: function(t, i, n) {
                return this.x = t * Math.sin(i), this.y = n, this.z = t * Math.cos(i), this;
            }
        }, {
            key: "setFromMatrixPosition",
            value: function(t) {
                return t = t.elements, this.x = t[12], this.y = t[13], this.z = t[14], this;
            }
        }, {
            key: "setFromMatrixScale",
            value: function(t) {
                var i = this.setFromMatrixColumn(t, 0).length(), n = this.setFromMatrixColumn(t, 1).length();
                t = this.setFromMatrixColumn(t, 2).length();
                return this.x = i, this.y = n, this.z = t, this;
            }
        }, {
            key: "setFromMatrixColumn",
            value: function(t, i) {
                return this.fromArray(t.elements, 4 * i);
            }
        }, {
            key: "setFromMatrix3Column",
            value: function(t, i) {
                return this.fromArray(t.elements, 3 * i);
            }
        }, {
            key: "equals",
            value: function(t) {
                return t.x === this.x && t.y === this.y && t.z === this.z;
            }
        }, {
            key: "fromArray",
            value: function(t) {
                var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                return this.x = t[i], this.y = t[i + 1], this.z = t[i + 2], this;
            }
        }, {
            key: "toArray",
            value: function() {
                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                return t[i] = this.x, t[i + 1] = this.y, t[i + 2] = this.z, t;
            }
        }, {
            key: "fromBufferAttribute",
            value: function(t, i, n) {
                return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), 
                this.x = t.getX(i), this.y = t.getY(i), this.z = t.getZ(i), this;
            }
        }, {
            key: "random",
            value: function() {
                return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
            }
        } ]) && k(i.prototype, n), Object.defineProperty(i, "prototype", {
            writable: !1
        }), t;
    }(), O = new S(), T = new l();
    function I(i) {
        return (I = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function P(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != I(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != I(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == I(t) ? t : String(t);
            }(e.key), e);
        }
    }
    l = function() {
        function t() {
            if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
            this.R = {
                x: Number.MAX_VALUE,
                y: Number.MAX_VALUE
            }, this.P = {
                x: -Number.MAX_VALUE,
                y: -Number.MAX_VALUE
            };
        }
        var i, n;
        return i = t, (n = [ {
            key: "min",
            get: function() {
                return this.R;
            }
        }, {
            key: "max",
            get: function() {
                return this.P;
            }
        }, {
            key: "center",
            get: function() {
                var t = {
                    x: Number.NaN,
                    y: Number.NaN
                };
                return this.valid() && (t.x = (this.min.x + this.max.x) / 2, t.y = (this.min.y + this.max.y) / 2), 
                t;
            }
        }, {
            key: "size",
            get: function() {
                var t = {
                    x: Number.NaN,
                    y: Number.NaN
                };
                return this.valid() && (t.x = this.max.x - this.min.x, t.y = this.max.y - this.min.y), 
                t;
            }
        }, {
            key: "copy",
            value: function(t) {
                return this.P.x = t.max.x, this.P.y = t.max.y, this.R.x = t.min.x, this.R.y = t.min.y, 
                this;
            }
        }, {
            key: "clone",
            value: function() {
                return new t().copy(this);
            }
        }, {
            key: "reset",
            value: function() {
                this.R = {
                    x: Number.MAX_VALUE,
                    y: Number.MAX_VALUE
                }, this.P = {
                    x: -Number.MAX_VALUE,
                    y: -Number.MAX_VALUE
                };
            }
        }, {
            key: "toObject",
            value: function() {
                return {
                    min: this.min,
                    max: this.max,
                    center: this.center,
                    size: this.size
                };
            }
        }, {
            key: "expand",
            value: function(t) {
                this.I(t);
            }
        }, {
            key: "expandByCoords",
            value: function(t) {
                this.C(t);
            }
        }, {
            key: "valid",
            value: function() {
                return this.L();
            }
        }, {
            key: "isCross",
            value: function(t) {
                var i = !0;
                return t.max.x < this.min.x && (i = !1), t.min.x > this.max.x && (i = !1), t.max.y < this.min.y && (i = !1), 
                !(t.min.y > this.max.y) && i;
            }
        } ]) && P(i.prototype, n), Object.defineProperty(i, "prototype", {
            writable: !1
        }), t;
    }();
    var z = (Object.assign(l.prototype, {
        L: function() {
            return !(this.min.x > this.max.x || this.min.y > this.max.y);
        },
        I: function(t) {
            t && t.valid() && (t.min.x < this.min.x && (this.min.x = t.min.x), t.min.y < this.min.y && (this.min.y = t.min.y), 
            t.max.x > this.max.x && (this.max.x = t.max.x), t.max.y > this.max.y) && (this.max.y = t.max.y);
        },
        C: function(t) {
            var i = this;
            t && 0 != t.length && t.forEach(function(t) {
                t.x < i.min.x && (i.min.x = t.x), t.y < i.min.y && (i.min.y = t.y), t.x > i.max.x && (i.max.x = t.x), 
                t.y > i.max.y && (i.max.y = t.y);
            });
        }
    }), l), j = function(t, i, n) {
        n = n || 2;
        var e, r, s, o, h, a = i && i.length, u = a ? i[0] * n : t.length, l = C(t, 0, u, n, !0), c = [];
        if (l && l.next !== l.prev) {
            if (a && (l = function(t, i, n, e) {
                var r, s, o, h = [];
                for (r = 0, s = i.length; r < s; r++) (o = C(t, o = i[r] * e, r < s - 1 ? i[r + 1] * e : t.length, e, !1)) === o.next && (o.steiner = !0), 
                h.push(function(t) {
                    for (var i = t, n = t; (i.x < n.x || i.x === n.x && i.y < n.y) && (n = i), (i = i.next) !== t; ) ;
                    return n;
                }(o));
                for (h.sort(_), r = 0; r < h.length; r++) !function(t, i) {
                    (i = function(t, i) {
                        var n, e = i, r = t.x, s = t.y, o = -1 / 0;
                        do {
                            if (s <= e.y && s >= e.next.y && e.next.y !== e.y) {
                                var h = e.x + (s - e.y) * (e.next.x - e.x) / (e.next.y - e.y);
                                if (h <= r && o < h) {
                                    if ((o = h) === r) {
                                        if (s === e.y) return e;
                                        if (s === e.next.y) return e.next;
                                    }
                                    n = e.x < e.next.x ? e : e.next;
                                }
                            }
                        } while ((e = e.next) !== i);
                        if (!n) return null;
                        if (r !== o) {
                            var a, u = n, l = n.x, c = n.y, y = 1 / 0;
                            for (e = n; r >= e.x && e.x >= l && r !== e.x && E(s < c ? r : o, s, l, c, s < c ? o : r, s, e.x, e.y) && (a = Math.abs(s - e.y) / (r - e.x), 
                            Z(e, t)) && (a < y || a === y && (e.x > n.x || e.x === n.x && function(t, i) {
                                return L(t.prev, t, i.prev) < 0 && L(i.next, t, t.next) < 0;
                            }(n, e))) && (n = e, y = a), (e = e.next) !== u; ) ;
                        }
                        return n;
                    }(t, i)) && (t = V(i, t), D(i, i.next), D(t, t.next));
                }(h[r], n), n = D(n, n.next);
                return n;
            }(t, i, l, n)), t.length > 80 * n) {
                for (var y = e = t[0], f = r = t[1], v = n; v < u; v += n) (s = t[v]) < y && (y = s), 
                (o = t[v + 1]) < f && (f = o), e < s && (e = s), r < o && (r = o);
                h = 0 !== (h = Math.max(e - y, r - f)) ? 1 / h : 0;
            }
            !function t(i, n, e, r, s, o, h) {
                if (i) {
                    if (!h && o) {
                        for (var a = i, u = r, l = s, c = o, y = a; null === y.z && (y.z = A(y.x, y.y, u, l, c)), 
                        y.prevZ = y.prev, y.nextZ = y.next, (y = y.next) !== a; ) ;
                        y.prevZ.nextZ = null, y.prevZ = null;
                        var f, v, x, p, d, m, b, g, M = y, w = 1;
                        do {
                            for (v = M, d = M = null, m = 0; v; ) {
                                for (m++, x = v, f = b = 0; f < w && (b++, x = x.nextZ); f++) ;
                                for (g = w; 0 < b || 0 < g && x; ) 0 !== b && (0 === g || !x || v.z <= x.z) ? (v = (p = v).nextZ, 
                                b--) : (x = (p = x).nextZ, g--), d ? d.nextZ = p : M = p, p.prevZ = d, d = p;
                                v = x;
                            }
                        } while (d.nextZ = null, w *= 2, 1 < m);
                    }
                    for (var k, S, O = i; i.prev !== i.next; ) if (k = i.prev, S = i.next, o ? function(t, i, n, e) {
                        var r = t.prev, s = t, o = t.next;
                        if (!(0 <= L(r, s, o))) {
                            for (var h = (r.x < s.x ? r.x < o.x ? r : o : s.x < o.x ? s : o).x, a = (r.y < s.y ? r.y < o.y ? r : o : s.y < o.y ? s : o).y, u = (r.x > s.x ? r.x > o.x ? r : o : s.x > o.x ? s : o).x, l = (r.y > s.y ? r.y > o.y ? r : o : s.y > o.y ? s : o).y, c = A(h, a, i, n, e), y = A(u, l, i, n, e), f = t.prevZ, v = t.nextZ; f && f.z >= c && v && v.z <= y; ) {
                                if (f !== t.prev && f !== t.next && E(r.x, r.y, s.x, s.y, o.x, o.y, f.x, f.y) && 0 <= L(f.prev, f, f.next)) return;
                                if (f = f.prevZ, v !== t.prev && v !== t.next && E(r.x, r.y, s.x, s.y, o.x, o.y, v.x, v.y) && 0 <= L(v.prev, v, v.next)) return;
                                v = v.nextZ;
                            }
                            for (;f && f.z >= c; ) {
                                if (f !== t.prev && f !== t.next && E(r.x, r.y, s.x, s.y, o.x, o.y, f.x, f.y) && 0 <= L(f.prev, f, f.next)) return;
                                f = f.prevZ;
                            }
                            for (;v && v.z <= y; ) {
                                if (v !== t.prev && v !== t.next && E(r.x, r.y, s.x, s.y, o.x, o.y, v.x, v.y) && 0 <= L(v.prev, v, v.next)) return;
                                v = v.nextZ;
                            }
                            return 1;
                        }
                    }(i, r, s, o) : function(t) {
                        var i = t.prev, n = t, e = t.next;
                        if (!(0 <= L(i, n, e))) {
                            for (var r = t.next.next; r !== t.prev; ) {
                                if (E(i.x, i.y, n.x, n.y, e.x, e.y, r.x, r.y) && 0 <= L(r.prev, r, r.next)) return;
                                r = r.next;
                            }
                            return 1;
                        }
                    }(i)) n.push(k.i / e), n.push(i.i / e), n.push(S.i / e), q(i), i = S.next, O = S.next; else if ((i = S) === O) {
                        h ? 1 === h ? t(i = function(t, i, n) {
                            var e = t;
                            do {
                                var r = e.prev, s = e.next.next;
                            } while (!R(r, s) && F(r, e, e.next, s) && Z(r, s) && Z(s, r) && (i.push(r.i / n), 
                            i.push(e.i / n), i.push(s.i / n), q(e), q(e.next), e = t = s), (e = e.next) !== t);
                            return D(e);
                        }(D(i), n, e), n, e, r, s, o, 2) : 2 === h && function(i, n, e, r, s, o) {
                            var h = i;
                            do {
                                for (var a, u = h.next.next; u !== h.prev; ) {
                                    if (h.i !== u.i && function(t, i) {
                                        return t.next.i !== i.i && t.prev.i !== i.i && !function(t, i) {
                                            var n = t;
                                            do {
                                                if (n.i !== t.i && n.next.i !== t.i && n.i !== i.i && n.next.i !== i.i && F(n, n.next, t, i)) return 1;
                                            } while ((n = n.next) !== t);
                                        }(t, i) && (Z(t, i) && Z(i, t) && function(t, i) {
                                            for (var n = t, e = !1, r = (t.x + i.x) / 2, s = (t.y + i.y) / 2; n.y > s != n.next.y > s && n.next.y !== n.y && r < (n.next.x - n.x) * (s - n.y) / (n.next.y - n.y) + n.x && (e = !e), 
                                            (n = n.next) !== t; ) ;
                                            return e;
                                        }(t, i) && (L(t.prev, t, i.prev) || L(t, i.prev, i)) || R(t, i) && 0 < L(t.prev, t, t.next) && 0 < L(i.prev, i, i.next));
                                    }(h, u)) return a = V(h, u), h = D(h, h.next), a = D(a, a.next), t(h, n, e, r, s, o), 
                                    t(a, n, e, r, s, o);
                                    u = u.next;
                                }
                            } while ((h = h.next) !== i);
                        }(i, n, e, r, s, o) : t(D(i), n, e, r, s, o, 1);
                        break;
                    }
                }
            }(l, c, n, y, f, h);
        }
        return c;
    };
    function C(t, i, n, e, r) {
        var s, o;
        if (r === 0 < function(t, i, n, e) {
            for (var r = 0, s = i, o = n - e; s < n; s += e) r += (t[o] - t[s]) * (t[s + 1] + t[o + 1]), 
            o = s;
            return r;
        }(t, i, n, e)) for (s = i; s < n; s += e) o = X(s, t[s], t[s + 1], o); else for (s = n - e; i <= s; s -= e) o = X(s, t[s], t[s + 1], o);
        return o && R(o, o.next) && (q(o), o = o.next), o;
    }
    function D(t, i) {
        if (!t) return t;
        i = i || t;
        var n, e = t;
        do {
            if (n = !1, e.steiner || !R(e, e.next) && 0 !== L(e.prev, e, e.next)) e = e.next; else {
                if (q(e), (e = i = e.prev) === e.next) break;
                n = !0;
            }
        } while (n || e !== i);
        return i;
    }
    function _(t, i) {
        return t.x - i.x;
    }
    function A(t, i, n, e, r) {
        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (i = 1431655765 & ((i = 858993459 & ((i = 252645135 & ((i = 16711935 & ((i = 32767 * (i - e) * r) | i << 8)) | i << 4)) | i << 2)) | i << 1)) << 1;
    }
    function E(t, i, n, e, r, s, o, h) {
        return 0 <= (r - o) * (i - h) - (t - o) * (s - h) && 0 <= (t - o) * (e - h) - (n - o) * (i - h) && 0 <= (n - o) * (s - h) - (r - o) * (e - h);
    }
    function L(t, i, n) {
        return (i.y - t.y) * (n.x - i.x) - (i.x - t.x) * (n.y - i.y);
    }
    function R(t, i) {
        return t.x === i.x && t.y === i.y;
    }
    function F(t, i, n, e) {
        var r = N(L(t, i, n)), s = N(L(t, i, e)), o = N(L(n, e, t)), h = N(L(n, e, i));
        return r !== s && o !== h || 0 === r && Y(t, n, i) || 0 === s && Y(t, e, i) || 0 === o && Y(n, t, e) || !(0 !== h || !Y(n, i, e));
    }
    function Y(t, i, n) {
        return i.x <= Math.max(t.x, n.x) && i.x >= Math.min(t.x, n.x) && i.y <= Math.max(t.y, n.y) && i.y >= Math.min(t.y, n.y);
    }
    function N(t) {
        return 0 < t ? 1 : t < 0 ? -1 : 0;
    }
    function Z(t, i) {
        return L(t.prev, t, t.next) < 0 ? 0 <= L(t, i, t.next) && 0 <= L(t, t.prev, i) : L(t, i, t.prev) < 0 || L(t, t.next, i) < 0;
    }
    function V(t, i) {
        var n = new U(t.i, t.x, t.y), e = new U(i.i, i.x, i.y), r = t.next, s = i.prev;
        return (t.next = i).prev = t, (n.next = r).prev = n, (e.next = n).prev = e, (s.next = e).prev = s, 
        e;
    }
    function X(t, i, n, e) {
        return t = new U(t, i, n), e ? (t.next = e.next, (t.prev = e).next.prev = t, e.next = t) : (t.prev = t).next = t, 
        t;
    }
    function q(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), 
        t.nextZ && (t.nextZ.prevZ = t.prevZ);
    }
    function U(t, i, n) {
        this.i = t, this.x = i, this.y = n, this.prev = null, this.next = null, this.z = null, 
        this.prevZ = null, this.nextZ = null, this.steiner = !1;
    }
    function W(t) {
        return function(t) {
            if (Array.isArray(t)) return Q(t);
        }(t) || function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
        }(t) || function(t, i) {
            var n;
            if (t) return "string" == typeof t ? Q(t, i) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : n) || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Q(t, i) : void 0;
        }(t) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
    }
    function Q(t, i) {
        (null == i || i > t.length) && (i = t.length);
        for (var n = 0, e = new Array(i); n < i; n++) e[n] = t[n];
        return e;
    }
    var B = {
        area: function(t) {
            for (var i = t.length, n = 0, e = i - 1, r = 0; r < i; e = r++) n += t[e].x * t[r].y - t[r].x * t[e].y;
            return .5 * n;
        },
        isClockWise: function(t) {
            return B.area(t) < 0;
        },
        triangulateShape: function(t, i) {
            var n = [], e = [], r = [], s = (H(t), K(n, t), t.length);
            i.forEach(H);
            for (var o = 0; o < i.length; o++) e.push(s), s += i[o].length, K(n, i[o]);
            for (var h = j(n, e), a = 0; a < h.length; a += 3) r.push(h.slice(a, a + 3));
            return r;
        },
        triangulate: function(t) {
            (r = []).push.apply(r, W(t[0]));
            for (var i = [], n = 1; n < t.length; n++) {
                var e = [];
                e.push.apply(e, W(t[n])), i.push(e);
            }
            if (!B.isClockWise(r)) for (var r = r.reverse(), s = 0, o = i.length; s < o; s++) {
                var h = i[s];
                B.isClockWise(h) && (i[s] = h.reverse());
            }
            return B.triangulateShape(r, i);
        }
    };
    function H(t) {
        var i, n = t.length;
        2 < n && (n = t[n - 1], i = t[0], n.x === i.x) && n.y === i.y && t.pop();
    }
    function K(t, i) {
        for (var n = 0; n < i.length; n++) t.push(i[n].x), t.push(i[n].y);
    }
    function G(i) {
        return (G = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function $(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != G(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != G(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == G(t) ? t : String(t);
            }(e.key), e);
        }
    }
    var J = 1e-5, tt = .001, it = Math.PI / 180, nt = 180 / Math.PI;
    l = function(t, i, n) {
        return i && $(t.prototype, i), n && $(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t;
    }(function t() {
        if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
    });
    Object.assign(l.prototype, {
        N: function() {
            return J;
        },
        D: function() {
            return it;
        },
        A: function() {
            return nt;
        },
        F: function(t) {
            return t < J && -J < t;
        },
        Y: function(t) {
            return J < t;
        },
        Z: function(t) {
            return t < -J;
        },
        V: function(t, i, n) {
            return i = (t.x - n.x) * (i.y - n.y) - (i.x - n.x) * (t.y - n.y), Math.abs(i) < J ? 0 : i;
        },
        distanceOfTwoPoints: function(t, i) {
            return t && i ? Math.sqrt((t.x - i.x) * (t.x - i.x) + (t.y - i.y) * (t.y - i.y)) : Number.NaN;
        },
        distance: function(t, i) {
            return Math.sqrt(Math.pow(i.x - t.x, 2) + Math.pow(i.y - t.y, 2));
        },
        isPolygonContainPoint: function(t, i) {
            for (var n = 0, e = 0; e < t.length; e++) {
                var r = t[e].x, s = t[e].y, o = 0, h = (e < t.length - 1 ? (o = t[e + 1].x, t[e + 1]) : (o = t[0].x, 
                t[0])).y;
                if (r === i.x && s === i.y || o === i.x && h === i.y) return !0;
                if (h !== s) {
                    var a = r + (i.y - s) * (o - r) / (h - s);
                    if (a === i.x) return !0;
                    r !== o ? a <= Math.max(r, o) && a >= Math.min(r, o) && a > i.x && a !== r && (a === o && 0 < (s - i.y) * (h - i.y) ? n += 2 : n++) : a <= Math.max(r, o) && a >= Math.min(r, o) && a > i.x && (a === o && 0 < (s - i.y) * (h - i.y) ? n += 2 : n++);
                }
            }
            return 0 < n % 2;
        },
        isPolygonContainPoint2: function(t, i) {
            var n = t.length;
            if (n < 3) return !1;
            for (var e = n - 1, r = 0, s = 0; s < n; s++) {
                var o = t[s], h = t[e];
                o.y > i.y != h.y > i.y && i.x < (h.x - o.x) * (i.y - o.y) / (h.y - o.y) + o.x && (o.y > h.y ? r++ : r--), 
                e = s;
            }
            return 0 != r;
        },
        isPolygonInPolygon: function(t, i) {
            var n = Object.assign([], t), e = Object.assign([], i);
            n.push(n[0]), e.push(e[0]);
            for (var r = 0; r < n.length - 1; r++) {
                var s = n[r];
                if (!this.isPolygonContainPoint(e, s) && !this.isPolygonContainPoint2(e, s)) return !1;
            }
            for (var o = 0; o < n.length - 1; o++) for (var h = 0; h < e.length - 1; h++) if (this.B(n[o], n[o + 1], e[h], e[h + 1]).isintersect && !this.H(e[h], e[h + 1], n[o]) && !this.H(e[h], e[h + 1], n[o + 1])) return !1;
            return !0;
        },
        X: function(t, i, n, e) {
            return !(Math.max(t.x, i.x) < Math.min(n.x, e.x) || Math.max(t.y, i.y) < Math.min(n.y, e.y) || Math.max(n.x, e.x) < Math.min(t.x, i.x) || Math.max(n.y, e.y) < Math.min(t.y, i.y));
        },
        U: function(t, i, n, e) {
            return !(Math.max(t.x, i.x) < Math.min(n.x, e.x) || Math.max(t.y, i.y) < Math.min(n.y, e.y) || Math.max(n.x, e.x) < Math.min(t.x, i.x) || Math.max(n.y, e.y) < Math.min(t.y, i.y) || 0 === this.V(n, i, t) && 0 === this.V(i, e, t) || this.V(n, i, t) * this.V(i, e, t) < 0 || this.V(t, e, n) * this.V(e, i, n) < 0);
        },
        q: function(t, i, n) {
            return !(t.x < i.x || t.y < i.y || t.x > n.x || t.y > n.y);
        },
        G: function(t, i, n) {
            var e = Math.min(i.x, n.x), r = Math.max(i.x, n.x), s = Math.min(i.y, n.y);
            i = Math.max(i.y, n.y);
            return !(t.x < e || t.x > r || t.y < s || t.y > i);
        },
        W: function(t, i, n) {
            var e = Math.min(n.x, i.x), r = Math.max(n.x, i.x), s = Math.min(n.y, i.y);
            n = Math.max(n.y, i.y);
            return !(t.x < e || t.x > r || t.y < s || t.y > n);
        },
        $: function(t, i, n) {
            for (var e, r, s = !1, o = 0; o < n; o++) e = i[o], r = i[(o + 1) % n], (e.y < t.y && r.y >= t.y || r.y < t.y && e.y >= t.y) && (e.x <= t.x || r.x <= t.x) && e.x + (t.y - e.y) / (r.y - e.y) * (r.x - e.x) < t.x && (s = !s);
            return s;
        },
        J: function(t, i, n) {
            return (t.x - i.x) * (n.y - i.y) == (n.x - i.x) * (t.y - i.y) && Math.min(i.x, n.x) <= t.x && t.x <= Math.max(i.x, n.x) && Math.min(i.y, n.y) <= t.y && t.y <= Math.max(i.y, n.y);
        },
        K: function(t, i) {
            return Math.sqrt((t.x - i.x) * (t.x - i.x) + (t.y - i.y) * (t.y - i.y));
        },
        tt: function(t, i) {
            return (t.x - i.x) * (t.x - i.x) + (t.y - i.y) * (t.y - i.y);
        },
        it: function(t, i, n) {
            var e = i.x, r = (i = i.y, n.x), s = (n = n.y, t.x), o = r - e, h = n - i, a = o * o + h * h, u = s - e, l = (t = t.y) - i, c = u * u + l * l;
            return this.F(a) ? this.F(c) ? 0 : c : (a = Math.sqrt(a), l = this.Y(h = (o /= a) * u + (u = h / a) * l) ? this.Z(h - a) ? (l = s - (e + h * o)) * l + (a = t - (i + h * u)) * a : (e = s - r) * e + (o = t - n) * o : c, 
            this.F(l) ? 0 : l);
        },
        nt: function(t, i, n, e) {
            var r, s = i.x, o = i.y, h = n.x, a = n.y, u = t.x, l = (t = t.y, h - s), c = a - o, y = Math.sqrt(l * l + c * c), f = u - s, v = t - o, x = Math.sqrt(f * f + v * v);
            return this.F(y) ? (e.x = i.x, e.y = i.y, this.F(r = x) ? 0 : r) : (r = this.Y(c = (l /= y) * f + (f = c / y) * v) ? this.Z(c - y) ? (y = u - (v = s + c * l), 
            l = t - (s = o + c * f), o = Math.sqrt(y * y + l * l), e.x = v, e.y = s, o) : (c = u - h, 
            f = t - a, y = Math.sqrt(c * c + f * f), e.x = n.x, e.y = n.y, y) : (e.x = i.x, 
            e.y = i.y, x), this.F(r) ? 0 : r);
        },
        et: function(t, i) {
            for (var n = 0, e = 0, r = 0, s = 0; s < i; s++) {
                var o = t[s], h = t[(s + 1) % i], a = (o.x * h.y - o.y * h.x) / 2;
                n += a, e += a * (o.x + h.x) / 3, r += a * (o.y + h.y) / 3;
            }
            return {
                x: e /= n,
                y: r /= n
            };
        },
        rt: function(t) {
            for (var i = B.triangulate([ t ]), n = 0, e = 0, r = 0, s = 0; s < i.length; s++) {
                var o = t[i[s][0]], h = t[i[s][1]], a = t[i[s][2]], u = h.x - o.x, l = h.y - o.y, c = a.x - o.x;
                n += u = (u * (a.y - o.y) - c * l) / 2, e += (o.x + h.x + a.x) / 3 * u, r += (o.y + h.y + a.y) / 3 * u;
            }
            return {
                x: e / n,
                y: r / n
            };
        },
        st: function(t, i) {
            if (i < 3) return 0;
            for (var n = 0, e = 0; e < i; ++e) {
                var r = t[e], s = t[(e + 1) % i];
                n += r.x * s.y - r.y * s.x;
            }
            return Math.abs(n / 2);
        },
        ot: function(t, i, n, e, r) {
            var s, o;
            return this.U(t, i, n, e) ? (s = (e.x - n.x) * (t.y - i.y) - (i.x - t.x) * (n.y - e.y), 
            o = (t.y - n.y) * (i.x - t.x) * (e.x - n.x) + n.x * (e.y - n.y) * (i.x - t.x) - t.x * (i.y - t.y) * (e.x - n.x), 
            r.x = o / s, s = (t.x - i.x) * (e.y - n.y) - (i.y - t.y) * (n.x - e.x), o = i.y * (t.x - i.x) * (e.y - n.y) + (e.x - i.x) * (e.y - n.y) * (t.y - i.y) - e.y * (n.x - e.x) * (i.y - t.y), 
            r.y = o / s, 1) : 0;
        },
        ht: function(t, i, n, e, r) {
            var s = Math.min(n.x, e.x), o = Math.max(n.x, e.x), h = Math.min(n.y, e.y), a = Math.max(n.y, e.y), u = t.x, l = t.y, c = n.x, y = n.y, f = e.x, v = e.y;
            if (90 == i) return !(t.x < s || t.x > o || (o - s < tt ? t.y >= y && t.y <= v || t.y >= v && t.y <= y ? (r.x = t.x, 
            r.y = t.y, 0) : y < v && t.x < y ? (r.x = c, r.y = y, 0) : !(v < y && t.x < v) || (r.x = f, 
            r.y = v, 0) : (r.y = x = (v - y) / (f - c) * (u - c) + y, r.x = u, x < l || !this.W(r, n, e))));
            if (270 == i) return !(t.x < s || t.x > o || (Math.abs(o - s < tt) ? t.y >= y && t.y <= v || t.y >= v && t.y <= y ? (r.x = t.x, 
            r.y = t.y, 0) : y < v && t.y > v ? (r.x = f, r.y = v, 0) : !(v < y && t.y > y) || (r.x = c, 
            r.y = y, 0) : (r.y = x = (v - y) / (f - c) * (u - c) + y, r.x = u, l < x || !this.W(r, n, e))));
            if (270 != i && 90 != i && Math.abs(o - s < tt)) {
                t = s;
                var x = Math.tan(i / 180 * Math.PI) * (t - u) + l;
                if (r.y = x, r.x = t, this.W(r, n, e)) return o = x - l, 0 < (s = t - u) / Math.sqrt(s * s + o * o) * Math.cos(i / 180 * Math.PI);
            }
            return Math.abs(a - h <= tt) ? (x = h, t = 1 / Math.tan(i / 180 * Math.PI) * (x - l) + u, 
            r.x = t, r.y = x, !!this.W(r, n, e) && (s = x - l, 0 < (o = t - u) / Math.sqrt(o * o + s * s) * Math.cos(i / 180 * Math.PI))) : (t = l + (a = Math.tan(i / 180 * Math.PI)) * ((x = (y - l - ((h = (v - y) / (f - c)) * c - a * u)) / (a - h)) - u), 
            r.x = x, r.y = t, !!this.W(r, n, e) && (o = x - u, s = t - l, Math.abs(o) <= tt && Math.abs(s) <= tt || 0 < o / Math.sqrt(o * o + s * s) * Math.cos(i / 180 * Math.PI)));
        },
        ut: function(t, i) {
            return Math.abs(t.x - i.x) < J && Math.abs(t.y - i.y) < J;
        },
        ft: function(t, i, n, e) {
            var r, s, o, h, a = t.x, u = t.y, l = i.x, c = i.y, y = n.x, f = n.y;
            return this.ut(t, i) || this.ut(t, n) ? (e.x = a, e.y = u, !0) : (o = Math.min(i.x, n.x), 
            h = Math.max(i.x, n.x), r = Math.min(i.y, n.y), s = Math.max(i.y, n.y), Math.abs(l - y) < 1e-5 ? (e.x = l, 
            r <= (e.y = u) && u <= s) : Math.abs(c - f) < 1e-5 ? (e.x = a, e.y = c, o <= a && a <= h) : (h = u + (r = -1 / ((f - c) / (y - l))) * ((o = (c - u - ((s = (f - c) / (y - l)) * l - r * a)) / (r - s)) - a), 
            e.x = o, e.y = h, !!this.W(e, i, n) || !(!this.ut(t, i) && !this.ut(t, n))));
        },
        ct: function(t, i) {
            return {
                x: t.y * i.z - t.z * i.y,
                y: t.z * i.x - t.x * i.z,
                z: t.x * i.y - t.y * i.x
            };
        },
        lt: function(t, i) {
            return t.x * i.x + t.y * i.y + t.z * i.z;
        },
        vt: function(t) {
            return Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z);
        },
        yt: function(t, i) {
            return t.x * i.x + t.y * i.y;
        },
        dt: function(t, i) {
            return t.x * i.y - t.y * i.x;
        },
        bt: function(t) {
            return Math.sqrt(t.x * t.x + t.y * t.y);
        },
        Mt: function(t, i) {
            var n, e;
            return 0 == t.x && 0 == t.y || 0 == i.x && 0 == i.y ? 0 : (n = {
                x: t.x,
                y: t.y,
                z: 0
            }, e = {
                x: i.x,
                y: i.y,
                z: 0
            }, n = this.ct(n, e), e = this.yt(t, i), e = Math.acos(e / (this.bt(t) * this.bt(i))), 
            0 < n.z ? e / Math.PI * 180 : 360 - e / Math.PI * 180);
        },
        kt: function(t, i, n, e) {
            for (var r = 0; r < n.length; r++) {
                var s = n[r], o = n[(r + 1) % n.length];
                if (1 == this.ot(t, i, s, o, e)) return !0;
            }
            return !1;
        },
        gt: function(t, i, n, e, r) {
            var s = Math.min(t.x, n.x, e.x), o = Math.max(t.x, n.x, e.x), h = Math.min(t.y, n.y, e.y), a = Math.max(t.y, n.y, e.y);
            o = Math.sqrt((o - s) * (o - s) + (a - h) * (a - h)), s = i / 180 * Math.PI, a = o * Math.cos(s) + t.x, 
            h = o * Math.sin(s) + t.y;
            return 1 == this.ot(t, {
                x: a,
                y: h
            }, n, e, r);
        },
        wt: function(t) {
            var i = {
                x: null,
                y: null
            }, n = 0, e = 0, r = t.length;
            1 < t.length && t[0].x === t[t.length - 1].x && t[0].y === t[t.length - 1].y && r--;
            for (var s = 0; s < r; s++) n += t[s].x, e += t[s].y;
            return i.x = n / t.length, i.y = e / t.length, i;
        },
        St: function(t, i, n, e) {
            var r = [], s = t.x - i, o = t.x + i, h = t.y - i, a = t.y + i, u = Math.min(n.x, e.x), l = Math.max(n.x, e.x), c = Math.min(n.y, e.y), y = Math.max(n.y, e.y);
            return l < s || o < u || y < h || a < c || (s = e.x - n.x, o = e.y - n.y, (h = (t = (s * (h = t.x - n.x) + o * (a = t.y - n.y)) / (e = s * s + o * o)) * t - (h * h + a * a - i * i) / e) < 0) || (a = Math.sqrt(h), 
            e = {
                x: n.x - s * (i = -t + a),
                y: n.y - o * i
            }, s = {
                x: n.x - s * (h = -t - a),
                y: n.y - o * h
            }, i !== h && (u <= e.x && e.x <= l && c <= e.y && e.y <= y && r.push(e), u <= s.x) && s.x <= l && c <= s.y && s.y <= y && r.push(s)), 
            r;
        },
        _t: function(t, i, n) {
            var e, r = {};
            if (t.x != i.x) return e = i = (i.y - t.y) / (i.x - t.x), i = t.y - i * t.x, r.x = (+n.x - -1 * e * n.y - e * i) / (e * e + 1), 
            r.y = (e * e * n.y - -1 * e * n.x - -1 * i) / (e * e + 1), r;
            r.x = t.x, r.y = n.y;
        },
        B: function(t, i, n, e) {
            var r, s, o, h, a = {
                point: null,
                isintersect: !1
            };
            return this.distanceOfTwoPoints(t, n) < .001 || this.distanceOfTwoPoints(t, e) < .001 ? (a.isintersect = !0, 
            a.point = t) : this.distanceOfTwoPoints(i, n) < .001 || this.distanceOfTwoPoints(i, e) < .001 ? (a.isintersect = !0, 
            a.point = i) : (r = {
                x: i.x - t.x,
                y: i.y - t.y
            }, s = {
                x: e.x - n.x,
                y: e.y - n.y
            }, o = {
                x: n.x - t.x,
                y: n.y - t.y
            }, e = {
                x: e.x - t.x,
                y: e.y - t.y
            }, i = {
                x: i.x - n.x,
                y: i.y - n.y
            }, n = {
                x: -o.x,
                y: -o.y
            }, h = this.dt(s, r), Math.abs(h) <= 1e-5 || this.dt(o, r) * this.dt(e, r) <= -5e-4 && this.dt(n, s) * this.dt(i, s) < -5e-4 && (e = this.dt(s, o) / h, 
            a.point = {
                x: t.x + r.x * e,
                y: t.y + r.y * e
            }, a.isintersect = !0)), a;
        },
        Ot: function(t, i, n) {
            t.x === i.x && (i.x = i.x + 1), t.y === i.y && (i.y = i.y + 1), i.x === n.x && (n.x = n.x + 1), 
            i.y === n.y && (n.y = n.y + 1);
            var e = i.x - t.x, r = (t = i.y - t.y, n.x - i.x);
            return !(0 < e * (n.y - i.y) - t * r);
        },
        getAngle: function(t) {
            var i = t.p1, n = (t = t.p2).x - i.x;
            t = t.y - i.y, i = Math.sqrt(n * n + t * t), i = Math.asin(Math.abs(t) / i);
            return 0 < n && 0 < t ? i : n < 0 && 0 < t ? Math.PI - i : n < 0 && t < 0 ? Math.PI + i : 0 < n && t < 0 ? 2 * Math.PI - i : 0 == n && 0 < t ? i : 0 == n && t < 0 ? 3 * Math.PI / 2 : 0 < n && 0 == t ? i : n < 0 && 0 == t ? Math.PI : null;
        },
        jt: function(t) {
            var i = this.distanceOfTwoPoints(t[0], t[1]), n = this.distanceOfTwoPoints(t[1], t[2]), e = (i + n + (t = this.distanceOfTwoPoints(t[0], t[2]))) / 2;
            return Math.sqrt(e * (e - i) * (e - n) * (e - t));
        },
        Tt: function(t, i) {
            var n, e, r, s, o;
            return this.nt(t, i[0], i[1], {}) < 1e-4 || this.nt(t, i[0], i[2], {}) < 1e-4 || this.nt(t, i[1], i[2], {}) < 1e-4 || (s = {
                x: i[1].x - i[0].x,
                y: i[1].y - i[0].y
            }, n = {
                x: i[0].x - i[2].x,
                y: i[0].y - i[2].y
            }, e = {
                x: i[2].x - i[1].x,
                y: i[2].y - i[1].y
            }, o = {
                x: t.x - i[0].x,
                y: t.y - i[0].y
            }, r = {
                x: t.x - i[1].x,
                y: t.y - i[1].y
            }, t = {
                x: t.x - i[2].x,
                y: t.y - i[2].y
            }, i = this.dt(s, o), s = this.dt(e, r), o = this.dt(n, t), J < i * s && J < s * o);
        },
        xt: function(t, i, n) {
            var e = n.length, r = {
                isintersect: !1,
                start: null,
                end: null,
                type: 0,
                outer: null
            }, s = [];
            if (this.Tt(t, n) && (r.start = t), this.Tt(i, n) && (r.end = i), null != r.start && null != r.end) r.isintersect = !0, 
            r.type = 1; else {
                for (var o = (n[1].x + n[2].x) / 2, h = (n[1].y + n[2].y) / 2, a = 1; a < e; a++) {
                    var u, l = this.B(t, i, n[a - 1], n[a]);
                    if (l.isintersect) {
                        if (null != r.start) return r.end = l.point, r.isintersect = !0, r.outer = "end", 
                        u = this.Mt({
                            x: o - n[0].x,
                            y: h - n[0].y
                        }, {
                            x: i.x - n[0].x,
                            y: i.y - n[0].y
                        }), r.type = 0 < (u = u < 180 ? u : u - 360) ? 2 : 3, r;
                        if (null != r.end) return r.start = l.point, r.isintersect = !0, r.outer = "start", 
                        u = this.Mt({
                            x: o - n[0].x,
                            y: h - n[0].y
                        }, {
                            x: t.x - n[0].x,
                            y: t.y - n[0].y
                        }), r.type = 0 < (u = u < 180 ? u : u - 360) ? 2 : 3, r;
                        s.push(l);
                    }
                }
                var c, y = this.B(t, i, n[0], n[e - 1]);
                if (y.isintersect) {
                    if (null != r.start) return r.end = y.point, r.isintersect = !0, r.outer = "end", 
                    c = this.Mt({
                        x: o - n[0].x,
                        y: h - n[0].y
                    }, {
                        x: i.x - n[0].x,
                        y: i.y - n[0].y
                    }), r.type = 0 < (c = c < 180 ? c : c - 360) ? 2 : 3, r;
                    if (null != r.end) return r.start = y.point, r.isintersect = !0, r.outer = "start", 
                    c = this.Mt({
                        x: o - n[0].x,
                        y: h - n[0].y
                    }, {
                        x: t.x - n[0].x,
                        y: t.y - n[0].y
                    }), r.type = 0 < (c = c < 180 ? c : c - 360) ? 2 : 3, r;
                    s.push(y);
                }
                2 != s.length || this.distanceOfTwoPoints(s[0].point, s[1].point) < .01 || (this.distanceOfTwoPoints(s[0].point, t) <= this.distanceOfTwoPoints(s[0].point, i) ? (r.start = s[0].point, 
                r.end = s[1].point) : (r.start = s[1].point, r.end = s[0].point), r.isintersect = !0, 
                r.type = 4);
            }
            return r;
        },
        Rt: function(t, i, n) {
            var e = n.length, r = {
                isintersect: !1,
                start: null,
                end: null
            }, s = [];
            if (this.Tt(t, n) && (r.start = t), this.Tt(i, n) && (r.end = i), null != r.start && null != r.end) r.isintersect = !0; else {
                for (var o = 1; o < e; o++) {
                    var h = this.B(t, i, n[o - 1], n[o]);
                    if (h.isintersect) {
                        if (null != r.start) return r.end = h.point, r.isintersect = !0, r;
                        if (null != r.end) return r.start = t, r.isintersect = !0, r;
                        s.push(h);
                    }
                }
                var a = this.B(t, i, n[0], n[e - 1]);
                if (a.isintersect) {
                    if (null != r.start) return r.end = a.point, r.isintersect = !0, r;
                    if (null != r.end) return r.start = t, r.isintersect = !0, r;
                    s.push(a);
                }
                2 == s.length && (r.start = (this.distanceOfTwoPoints(s[0].point, t) <= this.distanceOfTwoPoints(s[0].point, i) ? s[0] : s[1]).point, 
                r.end = (this.distanceOfTwoPoints(s[0].point, t) > this.distanceOfTwoPoints(s[0].point, i) ? s[0] : s[1]).point, 
                r.isintersect = !0);
            }
            return r;
        },
        Et: function(t, i) {
            if (0 == i.length) return [ t ];
            var n, e, r = this.Pt(i), s = [], o = (r.sort(function(i, n) {
                var e = (i.It.x - t.It.x) * (i.It.x - t.It.x) + (i.It.y - t.It.y) * (i.It.y - t.It.y), r = (n.It.x - t.It.x) * (n.It.x - t.It.x) + (n.It.y - t.It.y) * (n.It.y - t.It.y);
                return (e < (i = (i.Ct.x - t.It.x) * (i.Ct.x - t.It.x) + (i.Ct.y - t.It.y) * (i.Ct.y - t.It.y)) ? e : i) < (r < (n = (n.Ct.x - t.It.x) * (n.Ct.x - t.It.x) + (n.Ct.y - t.It.y) * (n.Ct.y - t.It.y)) ? r : n);
            }), 0);
            for (o = 0; o < r.length; o++) this.distanceOfTwoPoints(r[o].It, r[o].Ct) < .01 || (n = this.distanceOfTwoPoints(r[o].It, t.It), 
            e = this.distanceOfTwoPoints(r[o].Ct, t.It), n < .01 ? t.It = r[o].Ct : e < .01 ? t.It = r[o].It : n < e ? .1 < this.distanceOfTwoPoints(t.It, r[o].It) && (s.push({
                Lt: t.Lt,
                It: t.It,
                Ct: r[o].It,
                K: t.K,
                Nt: t.Nt
            }), t.It = r[o].Ct) : .1 < this.distanceOfTwoPoints(t.It, r[o].Ct) && (s.push({
                Lt: t.Lt,
                It: t.It,
                Ct: r[o].Ct,
                K: t.K,
                Nt: t.Nt
            }), t.It = r[o].It), r.splice(o, 1));
            return .1 < this.distanceOfTwoPoints(t.It, t.Ct) && s.push(t), s;
        },
        Pt: function(t) {
            var i = [];
            if (1 == t.length) return t;
            for (var n = t[0], e = 1; 0 < t.length; ) {
                if (e >= t.length) {
                    if (i.push(n), t.splice(0, 1), t.length < 1) break;
                    n = t[0], e = 1;
                }
                if (1 === t.length) {
                    i.push(n);
                    break;
                }
                this.H(n.It, n.Ct, t[e].It) ? (this.H(n.It, n.Ct, t[e].Ct) || (n.Ct = t[e].Ct), 
                t.splice(e, 1)) : this.H(n.It, n.Ct, t[e].Ct) ? (n.It = t[e].It, t.splice(e, 1)) : this.H(t[e].It, t[e].Ct, n.It) ? (this.H(t[e].It, t[e].Ct, n.Ct) || (t[e].Ct = n.Ct), 
                n = t[e], t.splice(e, 1)) : this.H(t[e].It, t[e].Ct, n.Ct) ? (t[e].It = n.It, n = t[e], 
                t.splice(e, 1)) : e++;
            }
            return i;
        },
        H: function(t, i, n) {
            var e = t.x - n.x, r = t.y - n.y, s = i.x - n.x, o = i.y - n.y, h = this.distanceOfTwoPoints(t, n);
            n = this.distanceOfTwoPoints(i, n), t = this.distanceOfTwoPoints(t, i);
            return e * o - r * s < 1e-5 && h + n - t < .001;
        }
    });
    var et = new l(), rt = 1, st = 0, ot = (l = {
        BROWSER: 0,
        WX: 1
    }, Object.freeze(l), {
        document: "undefined" != typeof document ? document : {},
        window: "undefined" != typeof window ? window : {},
        environment: l.BROWSER,
        XMLHttpRequest: "undefined" != typeof XMLHttpRequest ? XMLHttpRequest : {}
    }), ht = (l = {
        RIGHT: 2,
        LEFT: 4,
        BOTTOM: 8,
        TOP: 16,
        RIGHT_BOTTOM: 32,
        LEFT_BOTTOM: 64,
        RIGHT_TOP: 128,
        LEFT_TOP: 256,
        CENTER: 512
    }, Object.freeze(l), l);
    function at(t, i) {
        var n, e, r, s, o = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (o) return e = !(n = !0), {
            s: function() {
                o = o.call(t);
            },
            n: function() {
                var t = o.next();
                return n = t.done, t;
            },
            e: function(t) {
                e = !0, r = t;
            },
            f: function() {
                try {
                    n || null == o.return || o.return();
                } finally {
                    if (e) throw r;
                }
            }
        };
        if (Array.isArray(t) || (o = ct(t)) || i && t && "number" == typeof t.length) return o && (t = o), 
        s = 0, {
            s: i = function() {},
            n: function() {
                return s >= t.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: t[s++]
                };
            },
            e: function(t) {
                throw t;
            },
            f: i
        };
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ut(i) {
        return (ut = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function lt(t) {
        return function(t) {
            if (Array.isArray(t)) return yt(t);
        }(t) || function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
        }(t) || ct(t) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
    }
    function ct(t, i) {
        var n;
        if (t) return "string" == typeof t ? yt(t, i) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : n) || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? yt(t, i) : void 0;
    }
    function yt(t, i) {
        (null == i || i > t.length) && (i = t.length);
        for (var n = 0, e = new Array(i); n < i; n++) e[n] = t[n];
        return e;
    }
    function ft(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != ut(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != ut(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == ut(t) ? t : String(t);
            }(e.key), e);
        }
    }
    l = function() {
        function t(i) {
            if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
            this.Dt = i.type, this.stepLength = .7, this.At = 180 / Math.PI, this.Ft = [ 295829355.45, 147914677.73, 73957338.86, 36978669.43, 18489334.72, 9244667.36, 4622333.68, 2311166.84, 1155583.42, 577791.71, 288895.85, 144447.93, 72223.96, 36111.98, 18056, 9028, 4514, 2257, 1128, 564, 282, 141, 70, 35, 17, 8, 4, 2, 1 ], 
            this.Yt = null, this.Zt = null, this.Vt = 5, this.Bt = !0, this.zt = .2, this.Ht = !1, 
            this.Xt = !0, this.Ut = !1, this.qt = 1.2, this.Qt = 80, this.Gt = 30, this.Wt = 21, 
            this.$t = !0, this.Jt = 22, this.Kt = 1.3, this.ti = "", this.ii = 100, this.ni = 3, 
            this.ei = 1, this.ri = 6, this.si = 10, this.oi = 5, this.hi = 0, this.ui = !1, 
            this.ai = !1, this.fi = !1, this.ci = !1, this.li = 0, this.vi = 0, this.yi = 0, 
            this.di = 0, this.bi = null, this.mi = null, this.pi = !1, this.Mi = null, this.ki = null, 
            this.gi = !1, this.wi = !1, this.Si = null, this._i = 0, this.Oi = o.ZH, this.ji = r.MODULE_SHORTEST, 
            this.Ti = s.PRIORITY_DEFAULT, this.xi = !1, this.Ri = !0, this.Ei = [], this.Pi = !1, 
            this.Ii = !1, this.Ci = new Map(), this.Li = !0, this.crossCircles, this.Ni = h.Auto, 
            this.Di = {
                radius: .5,
                dash: {
                    size: 4,
                    gap: 2
                }
            }, this.Ai = "#002FA7", this.Fi = !0, this.Yi = 0, this.Zi = new v(), this.Vi = new c(), 
            this.Bi = (window && "undefined" !== window.fengmap ? window : getApp().globalData).fengmap, 
            this.on = this.on.bind(this), this.zi(i), this.Hi();
        }
        var i, n;
        return i = t, (n = [ {
            key: "locationMarker",
            get: function() {
                return this.Xi;
            },
            set: function(t) {
                this.Xi = t;
            }
        }, {
            key: "lineFillMode",
            get: function() {
                return this.Ni;
            },
            set: function(t) {
                this.Ni = t;
            }
        }, {
            key: "naviResult",
            get: function() {
                return this.Ui;
            }
        }, {
            key: "followPosition",
            get: function() {
                return this.Bt;
            },
            set: function(t) {
                this.Bt = t;
            }
        }, {
            key: "followAngle",
            get: function() {
                return this.Ht;
            },
            set: function(t) {
                this.Ht = t;
            }
        }, {
            key: "on",
            value: function(t, i) {
                this.Vi.u(t, i);
            }
        }, {
            key: "off",
            value: function(t, i) {
                this.Vi.k(t, i);
            }
        }, {
            key: "dispose",
            value: function() {
                this.stop(), this.Yt = null, this.Zt && (this.Zt.dispose(), this.Zt = null);
            }
        }, {
            key: "setLanguage",
            value: function(t) {
                this.Oi != t && (this.Oi = t, this.qi());
            }
        }, {
            key: "setObstructions",
            value: function(t) {
                this.Zt.setObstructions(t);
            }
        }, {
            key: "setStartPoint",
            value: function(t, i) {
                this.Qi = Object.assign({}, this.Qi, t, {
                    x: t.x,
                    y: t.y,
                    level: t.level,
                    buildingID: t.buildingID,
                    height: "number" == typeof t.height ? t.height : this.ri
                });
                var n = null;
                return t.url && !i ? this.Gi(this.Qi, !0) : n;
            }
        }, {
            key: "setDestPoint",
            value: function(t, i) {
                this.Wi = Object.assign({}, this.Wi, t, {
                    x: t.x,
                    y: t.y,
                    level: t.level,
                    buildingID: t.buildingID,
                    height: "number" == typeof t.height ? t.height : this.ri
                });
                var n = null;
                return t.url && !i ? this.Gi(this.Wi, !1) : n;
            }
        }, {
            key: "route",
            value: function(t, i, n) {
                this.zi(t), this.$i(), this.Ji({
                    mode: t.mode,
                    priority: t.priority,
                    toDoors: t.toDoors,
                    obstruct: this.Ri,
                    viapoints: t.viapoints,
                    barrierFree: t.barrierFree
                }, i, n);
            }
        }, {
            key: "naviConstraint",
            value: function(t) {
                if (this.Qi && this.Wi) {
                    null == this.Ki && this.tn(), t.buildingID = void 0 !== t.buildingID ? t.buildingID : null;
                    var i = {}, n = [], e = Number.MAX_VALUE, r = 0, s = {
                        index: -1,
                        coords: {
                            level: t.level,
                            buildingID: t.buildingID
                        },
                        angle: null,
                        distance: Number.MAX_VALUE,
                        distanceToNext: Number.MAX_VALUE,
                        remain: this.nn,
                        relDirection: 1,
                        time: null,
                        dots: [],
                        insertIndex: -1,
                        toNext: null,
                        buildingIndex: -1
                    };
                    this.en && this.en.coords.buildingID !== t.buildingID && (this.en.insertIndex = -1);
                    for (var o = 0; o < this.Ki.length; o++) {
                        if (this.Ki[o].bid !== t.buildingID) ; else for (var h = this.Ki[o].naviPoints, a = 1; a < h.length; a++) {
                            var u, l, c = h[a - 1], y = h[a], f = c.index - r;
                            this.en && this.en.index > c.index || (f = this.rn[o].result.naviDescriptionsData[f].endPoint, 
                            c.level === t.level && y.level === t.level && (u = et.nt(t, c, y, i)) < e && (1 === a || null === this.en || this.en && this.en.coords.buildingID === t.buildingID && this.en && this.en.insertIndex <= a) && (null != this.sn && (l = (t.x - this.sn.x) * (y.x - c.x) + (t.y - this.sn.y) * (y.y - c.y), 
                            0 === Math.abs(l) && null != this.en ? s.relDirection = this.en.relDirection : l < 0 && (s.relDirection = -1)), 
                            s.distance = u, Object.assign(s.coords, i), s.angle = this.hn(c, y), s.index = c.index, 
                            s.distanceToNext = et.K(i, f), s.insertIndex = a, s.toNext = et.K(i, y), s.buildingIndex = o, 
                            this.un(s), n.push(Object.assign({}, s)), e = u));
                        }
                        r += this.rn[o].result.naviDescriptionsData.length;
                    }
                    var v = s;
                    if (this.en) for (var x = n.length - 2; 0 <= x; x--) n[x].remain >= v.remain && n[x].remain < this.en.remain && (n[x].distance <= v.distance || Math.abs(4 <= v.insertIndex - this.en.insertIndex) && v.buildingIndex == this.en.buildingIndex) && (v = n[x]);
                    return v.time = t.time, this.sn = t, v.remain < .5 ? this.en = null : this.en = v, 
                    v;
                }
            }
        }, {
            key: "pathConstraint",
            value: function(t, i) {
                return this.Zt ? this.Zt.pathConstraint(t, i) : null;
            }
        }, {
            key: "locate",
            value: function(t, i) {
                this.ai && this.stop(), this.an(t, i), this.sn = t;
            }
        }, {
            key: "locateNoConstraint",
            value: function(t, i) {
                this.ai && this.stop(), this.fn(t, i), this.sn = t;
            }
        }, {
            key: "clearLocationMarker",
            value: function() {
                this.Xi && (this.Xi.remove(), this.Xi = null);
            }
        }, {
            key: "clearMarkers",
            value: function() {
                this.cn && (this.cn.remove(), this.cn = null, this.Qi = null), this.ln && (this.ln.remove(), 
                this.ln = null, this.Wi = null);
            }
        }, {
            key: "drawNaviLine",
            value: function(t) {
                if (this.Qi && this.Wi) return this.vn = this.yn(this.dn, t), this.vn;
            }
        }, {
            key: "clearNaviLine",
            value: function() {
                this.vn && (this.vn.remove(), this.vn = null);
            }
        }, {
            key: "clearAll",
            value: function() {
                this.clearMarkers(), this.clearNaviLine(), this.clearLocationMarker();
            }
        }, {
            key: "overview",
            value: function(t, i) {
                var n = this;
                if (0 !== this.dn.length) {
                    for (var e = new z(), r = [], s = 0; s < this.dn.length; s++) !function() {
                        var t = [ Number.MAX_VALUE, -Number.MAX_VALUE ];
                        n.dn[s].resultbuild.forEach(function(i) {
                            t[0] = Math.min(t[0], i.level), t[1] = Math.max(t[1], i.level), e.C(i.pointList);
                        }), r.push({
                            bid: n.dn[s].bid,
                            levelRange: t
                        });
                    }();
                    this.bn(t, e, r, i);
                }
            }
        }, {
            key: "focusNaviLineSegment",
            value: function(t, i, n) {
                if (0 != this.rn.length) {
                    for (var e, r, s, o = null, h = null, a = 0; a < this.rn.length; a++) {
                        var u = this.rn[a].result.naviDescriptionsData;
                        if (t - u.length < 0) {
                            o = u[t], h = this.rn[a].bid;
                            break;
                        }
                        t -= u.length;
                    }
                    h && o && ((e = new z()).C([ o.startPoint, o.endPoint ]), r = [ Math.min(o.startLevel, o.endLevel), Math.max(o.startLevel, o.endLevel) ], 
                    s = this.Yt.getBuilding(h), this.bn(i, e, r, s, n));
                }
            }
        }, {
            key: "simulate",
            value: function(t) {
                var i, n, e = this;
                this.Qi && this.Wi && 0 !== this.dn.length && (this.ai && this.stop(), this.ai = !0, 
                this.zi(t), i = {}, this.pi = !1, this.Mi = this.Yt.getRotation(), n = i.qt || this.qt, 
                i.Wt = i.Wt || this.Wt || 0, this.mn(), this.Xi.rotateTo({
                    heading: -this.Mi
                }), this.Bt ? this.pn(this.Qi.level, this.Qi.buildingID, n, function() {
                    e.ai && e.Mn(e.Qi, n, function() {
                        var t;
                        e.ai && (t = i.Wt > e.Jt ? e.Jt : i.Wt, e.$t ? e.kn(e.Qt, n, function() {
                            e.ai && e.gn(t, n, function() {
                                e.ai && e.wn();
                            });
                        }) : e.gn(t, n, function() {
                            e.ai && e.wn();
                        }));
                    });
                }) : this.ai && this.wn());
            }
        }, {
            key: "pause",
            value: function() {
                this.ci = !0;
            }
        }, {
            key: "resume",
            value: function() {
                this.ci = !1;
            }
        }, {
            key: "stop",
            value: function() {
                this.ui = !0, this.Zi.stop(), this.Sn && this.Yt.off("update", this.Sn), this.ci = !1, 
                this.mi = null, this.ki = null, this.yi = 0, this.pi = !1, this.Si = null, this._i = 0, 
                this.gi = !1, this.wi = !1, this.Sn = null, this.ai = !1, this.fi = !1, this.li = 0, 
                this.vi = 0, this.bi = null, this.en = null;
            }
        }, {
            key: "getSpeed",
            value: function() {
                return this.Vt;
            }
        }, {
            key: "setSpeed",
            value: function(t) {
                this.Vt = t;
            }
        }, {
            key: "addZoomCircle",
            value: function(t) {
                if (0 != t.length) {
                    var i, n = null == t[0].buildingID ? null : t[0].buildingID;
                    this.Ci.has(n) ? i = this.Ci.get(n) : (i = new Map(), this.Ci.set(n, i));
                    for (var e, r = 0; r < t.length; r++) i.has(t[r].level) || i.set(t[r].level, []), 
                    (e = i.get(t[r].level)).push.apply(e, lt(t[r].circle));
                }
            }
        }, {
            key: "stopZoomCircle",
            value: function() {
                this.Li = !1;
            }
        }, {
            key: "constraintTrack",
            value: function(t) {
                return this.Zt.constraintTrack(t);
            }
        }, {
            key: "setLineFillMode",
            value: function(t) {
                this.Ni = t;
            }
        }, {
            key: "setPassedLineDistance",
            value: function(t) {
                this.vn && this.Ni == h.SpecifiedDistance && this.vn.moveProportion(t / this.nn);
            }
        } ]) && ft(i.prototype, n), Object.defineProperty(i, "prototype", {
            writable: !1
        }), t;
    }();
    var vt = (Object.assign(l.prototype, {
        zi: function(t) {
            t && (void 0 !== t.map && (this.Yt = t.map), void 0 !== t.analyser && (this.Zt = t.analyser), 
            void 0 !== t.speed && (this.Vt = t.speed), void 0 !== t.followSpeed && (this.zt = t.followSpeed), 
            void 0 !== t.followPosition && (this.Bt = t.followPosition), void 0 !== t.followAngle && (this.Ht = t.followAngle), 
            void 0 !== t.locationMarkerFollowAngle && (this.Xt = t.locationMarkerFollowAngle), 
            void 0 !== t.isMultiLevels && (this.Ut = t.isMultiLevels), void 0 !== t.inTime && (this.qt = t.inTime), 
            void 0 !== t.tiltAngle && (this.Qt = t.tiltAngle), void 0 !== t.changeFloorTiltAngle && (this.Gt = t.changeFloorTiltAngle), 
            void 0 !== t.changeTiltAngle && (this.$t = t.changeTiltAngle), void 0 !== t.zoom && (this.Wt = t.zoom), 
            void 0 !== t.maxZoom && (this.Jt = t.maxZoom), void 0 !== t.extendScale && (this.Kt = t.extendScale), 
            void 0 !== t.locationMarkerUrl && (this.ti = t.locationMarkerUrl), void 0 !== t.locationMarkerSize && (this.ii = t.locationMarkerSize), 
            void 0 !== t.locationMarkerHeight && (this.ni = t.locationMarkerHeight), void 0 !== t.lineMarkerHeight && (this.ei = t.lineMarkerHeight), 
            void 0 !== t.imageMarkerHeight && (this.ri = t.imageMarkerHeight), void 0 !== t.directionAssert && (this.si = t.directionAssert), 
            void 0 !== t.combineAsset && (this.oi = t.combineAsset), void 0 !== t.completeDistance && (this.hi = t.completeDistance), 
            void 0 !== t.Oi && (this.si = t.directionAssert), void 0 !== t.mode && (this.ji = t.mode), 
            void 0 !== t.priority && (this.Ti = t.priority), void 0 !== t.toDoors && (this.xi = t.toDoors), 
            void 0 !== t.obstruct && (this.Ri = t.obstruct), void 0 !== t.viapoints && (this.Ei = t.viapoints), 
            void 0 !== t.barrierFree && (this.Pi = t.barrierFree), void 0 !== t.lineStyle && Object.assign(this.Di, t.lineStyle), 
            void 0 !== t.linePassed && (this.Fi = t.linePassed), void 0 !== t.lineFillMode) && (this.Ni = t.lineFillMode);
        },
        Hi: function() {
            1 === this.Dt ? this._n = void 0 !== this.Bi.FMNaviDriveAnalyser && this.Zt instanceof this.Bi.FMNaviDriveAnalyser : this._n = void 0 !== this.Bi.FMNaviAnalyser && (this.Zt instanceof this.Bi.FMNaviAnalyser || this.Zt instanceof this.Bi.FMNaviWalkAnalyser), 
            this.Qi = null, this.Wi = null, this.cn = null, this.ln = null, this.Xi = null, 
            this.Sn = null, this.$i();
        },
        mn: function() {
            this.Xi instanceof this.Bi.FMLocationMarker ? this.Xi.moveTo({
                buildingID: this.Qi.buildingID,
                level: this.Qi.level,
                x: this.Qi.x,
                y: this.Qi.y
            }) : this.Xi = new this.Bi.FMLocationMarker({
                id: "location",
                buildingID: this.Qi.buildingID,
                level: this.Qi.level,
                x: this.Qi.x,
                y: this.Qi.y,
                url: this.ti || "",
                size: this.ii,
                height: this.ni
            }), this.Xi.addTo(this.Yt);
        },
        On: function(t) {
            for (var i, n = arguments.length <= 1 ? 0 : arguments.length - 1, e = 0; e < n; e++) {
                var r = e + 1 < 1 || arguments.length <= e + 1 ? void 0 : arguments[e + 1];
                if (t[r]) return t[r];
            }
            return (i = (arguments.length <= 1 ? 0 : arguments.length - 1) - 1 + 1) < 1 || arguments.length <= i ? void 0 : arguments[i];
        },
        jn: function(t) {
            if (this.Qi && this.Wi) return t == this.Qi.level || t == this._detData.level;
        },
        $i: function() {
            this.Ui = null, this.Tn = [], this.xn = [], this.dn = [], this.Rn = [], this.rn = [], 
            this.Ki = [], this.En = [], this.Pn = [], this.nn = 0, this.In = [], this.en = null, 
            this.sn = null;
        },
        Gi: function(t, i) {
            if (t.level) {
                var n = t.url || (i ? "image/small/marker/nav_location_start.png" : "image/small/marker/nav_location_dest.png"), e = i ? this.cn : this.ln, r = (e && e.remove(), 
                (null != t.buildingID ? this.Yt.getBuilding(t.buildingID) : this.Yt).getFloor(t.level));
                if (r) return (e = new this.Bi.FMImageMarker(Object.assign({
                    map: this.Yt,
                    url: n,
                    callback: function() {
                        t.callback && t.callback(e);
                    },
                    anchor: ht.BOTTOM,
                    depth: !1,
                    collision: !1
                }, t))).addTo(r), i ? this.cn = e : this.ln = e, e;
            }
        },
        Ji: function(t, i, n) {
            var e = this;
            this.Qi && this.Wi && (t = Object.assign({
                start: Object.assign({}, this.Qi),
                dest: Object.assign({}, this.Wi)
            }, t), this.Cn(t, function(t) {
                e.Ui = t, e.Ln(), e.crossCircles = e.Nn(e.dn, e.Ci), e.Dn(), e.An(), e.Fn(), e.tn(), 
                i && i(t);
            }, function(t) {
                n && n(t);
            }));
        },
        Ln: function() {
            if (this.Ui && this.Ui.subs && 0 != this.Ui.subs.length) {
                for (var t = this.Ui.subs[0].buildingID, i = [], n = [], e = [], r = 0; r < this.Ui.subs.length; r++) {
                    var s = this.Ui.subs[r];
                    s.buildingID !== t && (e.push({
                        bid: t,
                        result: i
                    }), i = [], t = s.buildingID), i.push(s), r == this.Ui.subs.length - 1 && e.push({
                        bid: t,
                        result: i
                    });
                }
                for (var o = 0; o < e.length; o++) {
                    var h = this.Yn(e[o].result);
                    n.push({
                        bid: e[o].bid,
                        resultbuild: h
                    });
                }
                this.Tn = e, this.dn = n;
            }
        },
        Yn: function(t) {
            for (var i = [], n = Number.NaN, e = null, r = 0; r < t.length; r++) {
                var s, o = t[r];
                n != o.levels[0] && ((e = {
                    length: 0,
                    level: o.levels[0],
                    pointList: []
                }).pointList.push(o.waypoint.points[0]), i.push(e), n = o.levels[0]), o.levels[0] == o.levels[1] ? ((s = e.pointList).push.apply(s, lt(o.waypoint.points.slice(1))), 
                e.length += o.distance) : (e = {
                    length: 0,
                    level: o.levels[0],
                    pointList: [ o.waypoint.points[0] ]
                }, i.push(e), e = {
                    length: 0,
                    level: o.levels[1],
                    pointList: [ o.waypoint.points[1] ]
                }, i.push(e));
            }
            return i;
        },
        Dn: function() {
            for (var t = 0; t < this.dn.length; t++) {
                var i = this.dn[t].resultbuild;
                this.Zn(i);
            }
        },
        Zn: function(t) {
            for (var i = 0; i < t.length - 1; i++) {
                var n, e, r = t[i];
                r.length && (n = r.pointList[r.pointList.length - 1], e = t[i + 1].pointList[0], 
                .2 < et.K(n, e)) && r.pointList.push(Object.assign({}, e));
            }
        },
        An: function() {
            for (var t = 0; t < this.dn.length; t++) {
                var i = this.dn[t].resultbuild;
                i = this.Vn(i);
                this.Rn.push({
                    bid: this.dn[t].bid,
                    groupsPoints: i
                });
            }
        },
        Vn: function(t) {
            for (var i = [], n = null, e = null, r = 0; r < t.length; r++) {
                var s = t[r], o = n == s.level;
                0 == s.length && 0 != r && r != t.length - 1 || (o || (n = s.level, e && i.push(e), 
                e = {
                    level: s.level,
                    pointList: []
                }), e.pointList = e.pointList.concat(s.pointList));
            }
            return e && i.push(e), i;
        },
        Fn: function() {
            if (this.Ui) for (var t = 0; t < this.Tn.length; t++) {
                var i = this.Tn[t].bid, n = this.Tn[t].result;
                n = this.qi(n);
                this.rn.push({
                    bid: i,
                    result: n
                }), this.nn += n.naviDistance;
            }
        },
        qi: function(t) {
            if (t) {
                for (var i = [], n = [], e = [], r = 0, s = this.Oi, o = t, h = 0, a = null, u = 0; u < o.length; u++) {
                    var l = o[u], c = l.waypoint.points, y = l.waypoint.direction[s];
                    y = (i.push(l.instruction[s]), {
                        startDirection: y[0],
                        startIndex: void 0,
                        startLevel: l.levels[0],
                        startPoint: c[0],
                        endDirection: y[1],
                        endIndex: void 0,
                        endLevel: l.levels[1],
                        endPoint: c.slice(-1)[0],
                        distance: l.distance
                    });
                    l.levels[0] == l.levels[1] ? (y.startIndex = h, h += c.length - 1, y.endIndex = h) : h = 0, 
                    n.push(y), null != a && l.levels[0] == l.levels[1] || (a = {
                        level: l.levels[1],
                        distance: 0
                    }, e.push(a)), a.distance += l.distance, r += l.distance;
                }
                return {
                    naviDescriptions: i,
                    naviDescriptionsData: n,
                    naviFloorsDistance: e,
                    naviDistance: r
                };
            }
        },
        tn: function() {
            if (this.Tn) {
                for (var t = 0, i = [], n = 0; n < this.Tn.length; n++) {
                    for (var e = this.Tn[n].result, r = this.Tn[n].bid, s = this.Bn(e), o = this.zn(e), h = 0; h < s.length; h++) s[h].index += t;
                    for (var a = 0; a < o.length; a++) o[a].index += t;
                    var u = this.rn[n].result.naviDistance;
                    t += e.length, i.push({
                        bid: r,
                        distance: u,
                        naviPoints: s,
                        naviSubPoints: o
                    });
                }
                this.Ki = i;
            }
        },
        Bn: function(t) {
            if (!t) return [];
            for (var i = [], n = t, e = 0; e < n.length; e++) {
                var r = n[e];
                if (r.levels[0] == r.levels[1]) for (var s = e + 1 == n.length ? null : n[e + 1], o = r.waypoint.points, h = null == s || s.levels[0] != s.levels[1] ? o.length : o.length - 1, a = 0; a < h; a++) {
                    var u = {
                        x: o[a].x,
                        y: o[a].y,
                        z: 0,
                        level: r.levels[0],
                        index: e
                    };
                    i.push(u);
                }
            }
            return i;
        },
        zn: function(t) {
            if (!t) return [];
            for (var i = [], n = t, e = 0; e < n.length; e++) {
                var r = n[e].waypoint.points, s = {
                    x: r[0].x,
                    y: r[0].y,
                    level: r[0].level,
                    index: e
                };
                i.push(s), e == n.length - 1 && (s = {
                    x: r.slice(-1)[0].x,
                    y: r.slice(-1)[0].y,
                    level: r.slice(-1)[0].level,
                    index: n.length
                }, i.push(s));
            }
            return i;
        },
        Hn: function(t, i) {
            var n = null;
            if (0 != t.length) {
                for (var e = [], r = 0; r < t.length; ) t[r].distance == i && e.push(t[r]), r += 1;
                if (1 < e.length) {
                    for (var s = 0; s < e.length; s++) if (0 <= e[s].relDirection) {
                        n = e[s];
                        break;
                    }
                    n = n || e[0];
                } else 1 == e.length && (n = e[0]);
            }
            return n;
        },
        un: function(t) {
            if (-1 != t.buildingIndex && -1 !== t.insertIndex) {
                for (var i, n, e = t.buildingIndex, r = this.Ki[e].naviPoints, s = 0, o = r.length - 1; o > t.insertIndex; o--) o - 1 >= t.insertIndex && (i = r[o], 
                n = r[o - 1], i.level === n.level) && (s += et.K(i, n));
                r[t.insertIndex] && r[t.insertIndex].level === t.coords.level && (s += et.K(r[t.insertIndex], t.coords));
                for (var h = e + 1; h < this.Ki.length; h++) s += this.Ki[h].distance;
                t.remain = s;
            }
        },
        yn: function(t, i) {
            var n = this;
            if (0 === t.length) return null;
            1 !== this.Dt || this.Di.hasOwnProperty("color") || (this.Di.color = this.Ai);
            for (var e = Object.assign({}, this.Di), r = (i && i.style && Object.assign(e, i.style), 
            i && i.height ? i.height : this.ei), s = [], o = 0; o < t.length; o++) for (var h = t[o].bid, a = t[o].resultbuild, u = 0; u < a.length; u++) !function() {
                var t = (i = a[u]).pointList;
                if (0 !== t.length) {
                    var i = i.level, e = [], o = (t.forEach(function(t) {
                        var i = parseFloat("" + t.x);
                        t = parseFloat("" + t.y);
                        e.push({
                            x: i,
                            y: t,
                            z: r
                        });
                    }), t.length < 2 && (o = parseFloat("" + t[0].x), t = parseFloat("" + t[0].y), e.push({
                        x: o,
                        y: t,
                        z: r
                    })), new n.Bi.FMSegment());
                    o.level = i, o.points = e, o.buildingID = h, s.push(o);
                }
            }();
            return (e = new this.Bi.FMLineMarker(Object.assign({
                segments: s
            }, e))).passed = i && null != i.passed ? i.passed : this.Fi, e.addTo(this.Yt), e;
        },
        Cn: function(t, i, n) {
            var e = this;
            this.Zt.route(t, function(t) {
                e.xi && t.door && (e.Wi.x = t.door.x, e.Wi.y = t.door.y), i && i(t);
            }, function(t) {
                n && n(t);
            });
        },
        Mn: function(t, i, n) {
            this.Yt.setCenter({
                x: t.x,
                y: t.y,
                animate: "number" == typeof i,
                duration: "number" == typeof i ? i : 0,
                finish: n
            });
        },
        kn: function(t, i, n) {
            this.Yt.setTilt({
                tilt: t,
                animate: "number" == typeof i,
                duration: "number" == typeof i ? i : 0,
                finish: n
            });
        },
        Xn: function(t, i, n) {
            this.Yt.setRotation({
                rotation: t,
                animate: "number" == typeof i,
                duration: "number" == typeof i ? i : 0,
                finish: n
            });
        },
        gn: function(t, i, n) {
            this.Yt.setZoom({
                zoom: t,
                animate: "number" == typeof i,
                duration: "number" == typeof i ? i : 0,
                finish: n
            }, !0);
        },
        pn: function(t, i, n, e) {
            var r;
            return (i = null == i ? ((r = this.Yt).setVisibleLevels([ t ]), r.getLevel()) : ((r = this.Yt.getBuilding(i)).setVisibleLevels([ t ]), 
            r.level)) == t ? (e && e(), null) : r.setLevel({
                level: t,
                animate: "number" == typeof n,
                duration: "number" == typeof n ? n : 0,
                finish: e
            });
        },
        Un: function(t) {
            var i = this.xn;
            if (0 === i.length) return [];
            for (var n = [], e = 0, r = 0; r < i.length; r++) {
                var s = i[r];
                if (!(s.pointList.length <= 1)) for (var o = s.level, h = 0; h < s.pointList.length; h++) {
                    for (var a = s.pointList[h], u = ((a = new S(a.x, 0, a.y)).level = o, -1), l = 1; l < t.length; l++) if (e < t[l].qn) {
                        u = t[l - 1].Qn;
                        break;
                    }
                    a.Qn = -1 !== u ? u : t[t.length - 1].Qn, n.push(a), e++;
                }
            }
            return n;
        },
        Gn: function(t, i) {
            if (0 === i) return t[0];
            for (var n, e, r = 0, s = 0, o = t[0], h = 1; h < t.length; h++) if ((n = t[h]).bid !== o.bid) o = n; else if (n.level !== o.level) o = n; else {
                if (i <= (r += (e = n.clone().sub(o)).length())) return e.normalize(), (e = o.clone().add(e.clone().multiplyScalar(i - s))).level = n.level, 
                e.index = n.Qn != o.index ? o.index : n.Qn, e.bid = (n.bid != o.bid ? o : n).bid, 
                e;
                (o = n.clone()).level = n.level, o.index = n.Qn, o.bid = n.bid, s = r;
            }
            var a = t[t.length - 1];
            return a.index = a.Qn, a.bid = a.bid, a;
        },
        Wn: function(t) {
            var i, n, e, r, s;
            return t && 0 !== t.length ? (n = 0, e = i = -1, t = t.map(function(t, r) {
                var s = new S(t.startPoint.x, 0, t.startPoint.y);
                return s.level = t.startLevel, s.Qn = r, i = r, t.startLevel !== t.endLevel ? (n += e, 
                s.qn = n, n++) : s.qn = t.startIndex + n, e = t.endIndex, s;
            }), r = this._naviDescriptionsData[this._naviDescriptionsData.length - 1], (s = new S(r.endPoint.x, 0, r.endPoint.y)).level = r.endLevel, 
            s.Qn = i + 1, s.qn = r.endIndex + n, t.push(s), t) : [];
        },
        $n: function(t) {
            var i, n, e, r = this;
            this.Xi && (this.wi ? (i = {
                x: t.x,
                y: t.y,
                height: this.Xi.height,
                level: t.level,
                buildingID: t.bid
            }, this.Xi.moveTo(i), this.wi = !1) : (n = (i = {}).qt || this.qt, i.Wt = i.Wt || this.Wt || 0, 
            e = i.Wt > this.Jt ? this.Jt : i.Wt, this.Ut || (this.Jn(t), this.Xi.visible = !0), 
            this.$t && this.kn(this.Qt, n, null), this.Mn(t, n, function() {
                r.gn(e, n, function() {
                    r.gi = !1;
                });
            })));
        },
        Kn: function(t) {
            this.Xi && (this.Jn(t), this.wi = !1);
        },
        hn: function(t, i) {
            var n = new S(0, 0, 1);
            t = new S(t.x, 0, t.y), t = (i = new S(i.x, 0, i.y).clone().sub(t).normalize()).angleTo(n) * et.A();
            return 0 < i.clone().cross(n).y ? 360 - t : t;
        },
        te: function(t, i, n) {
            return t === i ? t : (180 < Math.abs(i - t) && (t < i ? t += 360 : i += 360), (t * (1 - n) + i * n) % 360);
        },
        ie: function(t, i) {
            var n = this.Ft, e = Math.floor(t), r = n[e - 1] * (1 - t % 1) + n[e] * (t % 1);
            for (r *= i, e = 0; r < n[e]; ) e++;
            return e + 1 - (r - n[e]) / (n[e - 1] - n[e]);
        },
        ne: function(t) {
            var i, n, e;
            this.ui || ot.window.requestAnimationFrame(this.ne.bind(this, t)), this.fi || (t.cnt++, 
            t.cnt !== t.step) || (t.cnt = 0, i = this.Zi.getDelta(), this.wi) || this.gi || this.ci || (this.yi += this.Vt * i, 
            this.yi <= 0) || this.Vt * i == 0 || (i = Object.assign({}, this.Gn(t.ps, this.yi)), 
            n = this.nn - this.yi, e = i.y, i.y = i.z, i.z = e, this.bi = {
                distance: 0,
                remain: n < this.di ? this.di : n,
                walk: this.yi,
                point: i,
                level: i.level,
                buildingID: i.bid,
                index: i.index - 1
            }, null != this.mi && (this.ki = this.hn(this.mi, i)), this.mi = Object.assign({}, i), 
            !i || n < this.di && this.pi ? this.fi = !0 : (n < this.di && !this.pi && (this.pi = !0), 
            this._i || (this._i = t.ps[0].level), null == this.Si && (this.Si = t.ps[0].bid || "outdoor"), 
            this.ai && (e = i.bid || "outdoor", this.Si !== e ? (this.wi = !0, this.Si = e, 
            this.li++, this.vi = 0, this._i = i.level, this.ee(1, i), this.Vi.g({
                type: "transit",
                level: i.level,
                buildingID: i.bid
            })) : this._i !== i.level && (this._i = i.level, this.vi++, this.ee(0, i), this.Vi.g({
                type: "transit",
                level: i.level,
                buildingID: i.bid
            })))));
        },
        ee: function(t, i) {
            var n = this;
            if (this.Bt) {
                var e = {}, r = e.qt || this.qt, s = (e.Wt = e.Wt || this.Wt || 0, e.Wt > this.Jt ? this.Jt : e.Wt);
                if (1 === t) return this.re(i.level, i.bid, function() {
                    n.pn(i.level, i.bid, r, function() {
                        n.$n(i);
                    });
                });
                this.gi = !0, this.$t && this.kn(this.Gt, r, null), this.Ut || (this.Xi.visible = !1), 
                this.re(i.level, i.bid, function() {
                    n.pn(i.level, i.bid, r, function() {
                        n.gn(s, r, function() {
                            n.Mn(i, r, function() {
                                n.$t ? n.kn(n.Qt, r, function() {
                                    n.$n(i);
                                }) : n.$n(i);
                            });
                        });
                    });
                });
            } else if (1 === t) return this.re(i.level, i.bid, function() {
                n.$n(i);
            });
        },
        se: function() {
            this.ui = !1;
            for (var t = [], i = 0; i < this.Ki.length; i++) {
                for (var n = this.Ki[i].naviPoints, e = [], r = 0; r < n.length; r++) {
                    var s = new S(n[r].x, 0, n[r].y);
                    s.Qn = n[r].index, s.level = n[r].level, s.bid = this.Ki[i].bid, e.push(s);
                }
                t.push.apply(t, e);
            }
            this.Zi.start(), this.fi = !1, this.li = 0, this.vi = 0, this.ne({
                step: 2,
                cnt: 0,
                ps: t
            });
        },
        oe: function() {
            if (!(this.gi || this.wi || this.ci)) {
                if (this.mi) {
                    var t, i, n = new S(this.Xi.x, this.Xi.y, 0).lerp(this.mi, this.pi ? 1 : this.zt), e = (n.level = this.mi.level, 
                    n.buildingID = this.mi.bid, this.naviConstraint(n));
                    if (e.index < 0) return;
                    if (this.Xi.moveTo({
                        x: n.x,
                        y: n.y,
                        height: this.ni,
                        level: n.level,
                        buildingID: n.buildingID
                    }), this.vn && (this.vn.passed ? this.vn.moveProportion(1 - e.remain / this.nn) : this.vn.moveProportion(0)), 
                    this.Li) for (var r = 0; r < this.crossCircles.length; r++) e.coords.buildingID == this.crossCircles[r].bid && e.coords.level == this.crossCircles[r].level && e.remain <= this.crossCircles[r].point.remain && e.remain >= this.crossCircles[r].remain && (t = !0, 
                    i = this.crossCircles[r].point);
                    if (this.Vi.g(Object.assign({}, this.bi, this.he(e, t, i))), t = !1, i = null, this.Bt ? this.Mn(n) : this.Yt.updateCountDown_ = 0, 
                    this.fi) return this.stop(), void this.Vi.g({
                        type: "complete"
                    });
                }
                null != this.ki && (n = this.te(this.Mi, this.ki, this.zt), this.Mi = n, this.Xi.rotateTo({
                    heading: -n
                }), this.Ht) && this.Xn(n);
            }
        },
        wn: function() {
            this.se(), this.Sn = this.oe.bind(this), this.Yt.on("update", this.Sn);
        },
        an: function(t, i) {
            this.en = null;
            var n, e, r = this.naviConstraint(t);
            if (this.Ni == h.Auto && this.vn && (this.vn.passed ? this.vn.moveProportion(1 - r.remain / this.nn) : this.vn.moveProportion(0)), 
            this.Li) for (var s = 0; s < this.crossCircles.length; s++) r.coords.buildingID == this.crossCircles[s].bid && r.coords.leve == this.crossCircles[s].level && r.remain <= this.crossCircles[s].point.remain && r.remain >= this.crossCircles[s].remain && (n = !0, 
            e = this.crossCircles[s].point);
            this.Vi.g(this.he(r, n, e)), n = !1, e = null, this.Xi && (r.coords.height = this.ni, 
            this.Xi.moveTo(r.coords), void 0 !== i ? this.Xi.rotateTo({
                heading: i
            }) : this.Xi.rotateTo({
                heading: -r.angle
            }));
        },
        fn: function(t, i) {
            var n, e, r = this.naviConstraint(t);
            if (this.Li) for (var s = 0; s < this.crossCircles.length; s++) r.coords.buildingID == this.crossCircles[s].bid && r.coords.leve == this.crossCircles[s].level && r.remain <= this.crossCircles[s].point.remain && r.remain >= this.crossCircles[s].remain && (n = !0, 
            e = this.crossCircles[s].point);
            this.Vi.g(this.he(r, n, e)), n = !1, e = null, this.Xi && (t.height = this.ni, this.Xi.moveTo(t), 
            void 0 !== i ? this.Xi.rotateTo({
                heading: i
            }) : this.Xi.rotateTo({
                heading: -r.angle
            }));
        },
        ue: function(t, i) {
            for (var n = [ {
                x: t.min.x,
                y: t.min.y
            }, {
                x: t.min.x,
                y: t.max.y
            }, {
                x: t.max.x,
                y: t.max.y
            }, {
                x: t.max.x,
                y: t.min.y
            } ], e = new z(), r = 0; r < i.length; r++) for (var s = i[r].levelRange, o = 0; o < s.length; o++) for (var h = o === s.length - 1 ? this.ei + 2 * this.Di.radius : this.ei, a = 0; a < n.length; a++) {
                var u = this.Bi.FMUtil.coordsMapToScreen(this.Yt, {
                    x: n[a].x,
                    y: n[a].y,
                    buildingID: i[r].bid,
                    level: s[o],
                    height: h
                });
                u && e.C([ u ]);
            }
            return e;
        },
        ae: function(t, i) {
            t = this.ue(t, i).size, i = this.Yt.getContainer().clientHeight;
            var n = this.Yt.getContainer().clientWidth;
            return n / i > t.x / t.y ? t.y / i : t.x / n;
        },
        fe: function(t, i, n, e, r, s) {
            var o = this, h = this.ae(t, i), a = this.Yt.getZoom();
            h ? (a = this.ie(this.Yt.getZoom(), h * (n || 1)), r = e - 1) : a -= 1, this.Yt.setZoom({
                zoom: a,
                animate: !1,
                finish: function() {
                    ++r === e ? s && s({
                        zoom: a
                    }) : o.fe(t, i, n, e, r, s);
                }
            });
        },
        ce: function(t, i) {
            for (var n = this.ue(t, i), e = [], r = 0; r < i.length; r++) for (var s = i[r].levelRange, o = i[r].bid || this.Yt.getMapOptions().buildingID, h = 0; h < s.length; h++) {
                var a = this.Yt.getBuilding(o).getFloor(s[h]).height;
                e.push(this.Bi.FMUtil.coordsScreenToMap(this.Yt, {
                    x: (n.max.x + n.min.x) / 2,
                    y: (n.max.y + n.min.y) / 2,
                    z: a + 2 * this.Di.radius
                }));
            }
            for (var u = new S(), l = 0; l < e.length; l++) u.add(e[l]);
            return u.divideScalar(e.length), u;
        },
        le: function(t, i, n, e, r, s) {
            var o = this;
            this.fe(t, i, n, 10, 0, function(h) {
                var a = o.ce(t, i);
                o.Yt.setCenter({
                    animate: !1,
                    x: a.x,
                    y: a.y,
                    finish: function() {
                        ++r === e ? s && s({
                            zoom: h.zoom,
                            center: a
                        }) : o.le(t, i, n, e, r, s);
                    }
                });
            });
        },
        bn: function(t, i, n, e) {
            for (var r = this, s = t && void 0 !== t.ratio ? t.ratio : 1, o = t && void 0 !== t.rotation ? t.rotation : 0, h = t && void 0 !== t.tilt ? t.tilt : 30, a = !t || void 0 === t.animate || t.animate, u = 1, l = [ 1 ], c = 0; c < n.length; c++) {
                for (var y = n[c].levelRange, f = [], v = y[0]; v <= y[1]; ) f.push(v), v++;
                null == n[c].bid ? u = (l = f)[Math.floor((f.length - 1) / 2)] : this.Yt.getBuilding(n[c].bid).setVisibleLevels(f);
            }
            this.Yt.setVisibleLevels(l, function() {
                r.Yt.setLevel({
                    level: u,
                    animate: a,
                    finish: function() {
                        var t = l.length % 2 == 0 ? r.Yt.getFloorSpace() / 2 : 0;
                        r.Yt.getInteracations().controls.panAdd({
                            x: 0,
                            y: t,
                            z: 0
                        }), r.Yt.setCenter({
                            animate: a,
                            x: i.center.x,
                            y: i.center.y,
                            finish: function() {
                                r.Yt.setTilt({
                                    tilt: h,
                                    animate: a,
                                    finish: function() {
                                        r.Yt.setRotation({
                                            rotation: o,
                                            animate: a,
                                            finish: function() {
                                                var t = r.Yt.getInteracations(), o = r.Yt.copyCamera(), h = t.copyControls(o), u = t.controls, l = r.Yt.camera;
                                                t.controls = h, r.Yt.camera = o, r.Yt.getInteracations().controls.update(), r.le(i, n, s, 10, 0, function(i) {
                                                    t.controls = u, r.Yt.camera = l, h.dispose(), h = null, r.Yt.enableUpdateRender(), 
                                                    r.Yt.setZoom({
                                                        animate: a,
                                                        zoom: i.zoom,
                                                        duration: .5
                                                    }), r.Yt.setCenter({
                                                        animate: a,
                                                        x: i.center.x,
                                                        y: i.center.y,
                                                        duration: .5,
                                                        finish: function() {
                                                            e && e();
                                                        }
                                                    });
                                                });
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
            });
        },
        re: function(t, i, n) {
            if (null == t || null == i) return n && n(), null;
            for (var e = this.Yt.getBuilding(i).levelChart, r = this.Yt.getVisibleLevels(), s = null, o = 0; o < e.length; o++) if (o % 2 == 1 && e[o] === t && (s = e[o - 1], 
            r.indexOf(s) < 0)) {
                this.Yt.setVisibleLevels([ s ]);
                break;
            }
            return null == s || this.Yt.getLevel() === s ? (n && n(), null) : this.Yt.setLevel({
                level: s,
                animate: "number" == typeof duration,
                duration: "number" == typeof duration ? duration : 0,
                finish: n
            });
        },
        Nn: function(t, i) {
            if (!i) return [];
            for (var n = 0, e = 0, r = [], s = 0; s < t.length; s++) for (var o = t[s].resultbuild, h = 0; h < o.length; h++) e += o[h].length;
            for (var a = 0; a < t.length; a++) for (var u = t[a].bid, l = t[a].resultbuild, c = 0; c < l.length; c++) {
                var y = l[c].level, f = l[c].pointList;
                if (0 < c && (n += l[c - 1].length), !(f.length <= 1) && i.has(u) && i.get(u).has(y)) for (var v = 0, x = i.get(u).get(y), p = 0; p < f.length; p++) {
                    0 < p && (v += et.distance(f[p - 1], f[p]));
                    var d, m = at(x);
                    try {
                        for (m.s(); !(d = m.n()).done; ) {
                            var b, g = d.value, M = this.ve(f, g, p);
                            M && (M.remain = 0 == p ? e - (n + v) : e - (n + v - M.disIntersectToPoint), b = e - (n + v - M.disCenterToPoint), 
                            r.push({
                                center: g.center,
                                radius: g.radius,
                                remain: b,
                                point: M,
                                level: y,
                                bid: u
                            }));
                        }
                    } catch (t) {
                        m.e(t);
                    } finally {
                        m.f();
                    }
                }
            }
            return r;
        },
        ve: function(t, i, n) {
            var e = 0;
            if (0 == n) return et.tt(t[n], i.center) <= .001 ? Object.assign({
                disIntersectToCenter: disIntersectToCenter,
                disIntersectToPoint: e
            }, t[n]) : null;
            if (!(et.tt(i.center, t[n - 1]) <= .001) && et.it(i.center, t[n - 1], t[n]) <= .001) {
                var r, s = at(i.points);
                try {
                    for (s.s(); !(r = s.n()).done; ) {
                        var o = r.value;
                        if (!et.W(o, i.center, t[n])) for (var h = n; 0 < h; h--) if (et.W(o, t[h - 1], t[h]) && et.it(o, t[h - 1], t[h]) <= .001) {
                            for (var a = [ o ], u = h; u <= n; u++) a.push(t[u]);
                            for (var l = 0; l < a.length - 1; l++) e += et.distance(a[l], a[l + 1]);
                            return o.disIntersectToPoint = e, o.disCenterToPoint = et.distance(i.center, t[n]), 
                            o;
                        }
                    }
                } catch (t) {
                    s.e(t);
                } finally {
                    s.f();
                }
            }
            return null;
        },
        Jn: function(t) {
            t = {
                x: this.Xi.x,
                y: this.Xi.y,
                height: this.Xi.height,
                level: t.level,
                buildingID: t.bid
            };
            var i = this.Rn[this.li].groupsPoints[this.vi];
            i && i.pointList && 0 < i.pointList.length && (t = Object.assign(t, i.pointList[0])), 
            this.Xi.moveTo(t);
        },
        he: function(t, i, n) {
            return i = {
                distance: t.distance,
                remain: t.remain,
                distanceToNext: t.distanceToNext,
                angle: t.angle,
                point: t.coords,
                level: t.coords.level,
                buildingID: t.coords.buildingID,
                index: t.index,
                enterCircle: i,
                intersect: n
            }, this.Dt === rt ? (i.type = "driving", i.drive = this.nn - t.remain) : (i.type = "walking", 
            i.walk = this.nn - t.remain), i;
        }
    }), l);
    function xt(i) {
        return (xt = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function pt(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != xt(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != xt(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == xt(t) ? t : String(t);
            }(e.key), e);
        }
    }
    function dt(t, i, n) {
        i = bt(i);
        var e = t;
        if ((i = function() {
            try {
                var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
            } catch (t) {}
            return function() {
                return !!t;
            }();
        }() ? Reflect.construct(i, n || [], bt(t).constructor) : i.apply(t, n)) && ("object" === xt(i) || "function" == typeof i)) return i;
        if (void 0 !== i) throw new TypeError("Derived constructors may only return object or undefined");
        if (void 0 !== (t = e)) return t;
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    function mt() {
        return (mt = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t, i, n) {
            var e = function(t, i) {
                for (;!Object.prototype.hasOwnProperty.call(t, i) && null !== (t = bt(t)); ) ;
                return t;
            }(t, i);
            if (e) return (e = Object.getOwnPropertyDescriptor(e, i)).get ? e.get.call(arguments.length < 3 ? t : n) : e.value;
        }).apply(this, arguments);
    }
    function bt(t) {
        return (bt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
    }
    function gt(t, i) {
        return (gt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, i) {
            return t.__proto__ = i, t;
        })(t, i);
    }
    function Mt(i) {
        return (Mt = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function wt(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != Mt(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != Mt(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == Mt(t) ? t : String(t);
            }(e.key), e);
        }
    }
    function kt(t, i, n) {
        i = Ot(i);
        var e = t;
        if ((i = function() {
            try {
                var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
            } catch (t) {}
            return function() {
                return !!t;
            }();
        }() ? Reflect.construct(i, n || [], Ot(t).constructor) : i.apply(t, n)) && ("object" === Mt(i) || "function" == typeof i)) return i;
        if (void 0 !== i) throw new TypeError("Derived constructors may only return object or undefined");
        if (void 0 !== (t = e)) return t;
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    function St() {
        return (St = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t, i, n) {
            var e = function(t, i) {
                for (;!Object.prototype.hasOwnProperty.call(t, i) && null !== (t = Ot(t)); ) ;
                return t;
            }(t, i);
            if (e) return (e = Object.getOwnPropertyDescriptor(e, i)).get ? e.get.call(arguments.length < 3 ? t : n) : e.value;
        }).apply(this, arguments);
    }
    function Ot(t) {
        return (Ot = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
    }
    function Tt(t, i) {
        return (Tt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, i) {
            return t.__proto__ = i, t;
        })(t, i);
    }
    l = function() {
        var t = n, i = vt;
        if ("function" != typeof i && null !== i) throw new TypeError("Super expression must either be null or a function");
        function n(t, i, e) {
            if (this instanceof n) return dt(this, n, [ t, i, e ]);
            throw new TypeError("Cannot call a class as a function");
        }
        return t.prototype = Object.create(i && i.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), i && gt(t, i), t = n, (i = [ {
            key: "on",
            value: function(t, i) {
                mt(bt(n.prototype), "on", this).call(this, t, i);
            }
        }, {
            key: "off",
            value: function(t, i) {
                mt(bt(n.prototype), "off", this).call(this, t, i);
            }
        } ]) && pt(t.prototype, i), Object.defineProperty(t, "prototype", {
            writable: !1
        }), n;
    }();
    var It = function() {
        var t = n, i = vt;
        if ("function" != typeof i && null !== i) throw new TypeError("Super expression must either be null or a function");
        function n(t, i, e) {
            if (this instanceof n) return t.type = rt, (t = kt(this, n, [ t, i, e ])).Vt = 7, 
            t.zt = .2, t;
            throw new TypeError("Cannot call a class as a function");
        }
        return t.prototype = Object.create(i && i.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), i && Tt(t, i), t = n, (i = [ {
            key: "on",
            value: function(t, i) {
                St(Ot(n.prototype), "on", this).call(this, t, i);
            }
        }, {
            key: "off",
            value: function(t, i) {
                St(Ot(n.prototype), "off", this).call(this, t, i);
            }
        }, {
            key: "locate",
            value: function(t, i) {
                St(Ot(n.prototype), "locate", this).call(this, t, i);
            }
        }, {
            key: "route",
            value: function(t, i, e) {
                St(Ot(n.prototype), "route", this).call(this, t, i, e);
            }
        }, {
            key: "locateNoConstraint",
            value: function(t, i) {
                St(Ot(n.prototype), "locateNoConstraint", this).call(this, t, i);
            }
        }, {
            key: "simulate",
            value: function(t) {
                St(Ot(n.prototype), "simulate", this).call(this, t);
            }
        }, {
            key: "naviResult",
            get: function() {
                return this.Ui;
            }
        } ]) && wt(t.prototype, i), Object.defineProperty(t, "prototype", {
            writable: !1
        }), n;
    }();
    function Pt(i) {
        return (Pt = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(i) {
            return t(i);
        } : function(i) {
            return i && "function" == typeof Symbol && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : t(i);
        })(i);
    }
    function zt(t, i) {
        for (var n = 0; n < i.length; n++) {
            var e = i[n];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), 
            Object.defineProperty(t, function(t) {
                return t = function(t, i) {
                    if ("object" != Pt(t) || !t) return t;
                    var n = t[Symbol.toPrimitive];
                    if (void 0 === n) return String(t);
                    if ("object" != Pt(n = n.call(t, i))) return n;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }(t, "string"), "symbol" == Pt(t) ? t : String(t);
            }(e.key), e);
        }
    }
    function jt(t, i, n) {
        i = Dt(i);
        var e = t;
        if ((i = function() {
            try {
                var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
            } catch (t) {}
            return function() {
                return !!t;
            }();
        }() ? Reflect.construct(i, n || [], Dt(t).constructor) : i.apply(t, n)) && ("object" === Pt(i) || "function" == typeof i)) return i;
        if (void 0 !== i) throw new TypeError("Derived constructors may only return object or undefined");
        if (void 0 !== (t = e)) return t;
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    function Ct() {
        return (Ct = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t, i, n) {
            var e = function(t, i) {
                for (;!Object.prototype.hasOwnProperty.call(t, i) && null !== (t = Dt(t)); ) ;
                return t;
            }(t, i);
            if (e) return (e = Object.getOwnPropertyDescriptor(e, i)).get ? e.get.call(arguments.length < 3 ? t : n) : e.value;
        }).apply(this, arguments);
    }
    function Dt(t) {
        return (Dt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
    }
    function _t(t, i) {
        return (_t = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, i) {
            return t.__proto__ = i, t;
        })(t, i);
    }
    var At, Et = function() {
        var t = n, i = vt;
        if ("function" != typeof i && null !== i) throw new TypeError("Super expression must either be null or a function");
        function n(t, i, e) {
            if (this instanceof n) return t.type = st, jt(this, n, [ t, i, e ]);
            throw new TypeError("Cannot call a class as a function");
        }
        return t.prototype = Object.create(i && i.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), i && _t(t, i), t = n, (i = [ {
            key: "on",
            value: function(t, i) {
                Ct(Dt(n.prototype), "on", this).call(this, t, i);
            }
        }, {
            key: "off",
            value: function(t, i) {
                Ct(Dt(n.prototype), "off", this).call(this, t, i);
            }
        }, {
            key: "route",
            value: function(t, i, e) {
                Ct(Dt(n.prototype), "route", this).call(this, t, i, e);
            }
        } ]) && zt(t.prototype, i), Object.defineProperty(t, "prototype", {
            writable: !1
        }), n;
    }(), Lt = (e = e(0), 0), Rt = wx.getSystemInfoSync(), Ft = (e = {
        AudioContext: function() {},
        URL: {},
        atob: e.atob,
        devicePixelRatio: Rt.pixelRatio,
        requestAnimationFrame: function(t) {
            var i = new Date().getTime(), n = Math.max(0, 16 - (i - Lt)), e = setTimeout(function() {
                t(i + n);
            }, n);
            return Lt = i + n, e;
        },
        cancelAnimationFrame: function(t) {
            clearTimeout(t);
        },
        screenWidth: Rt.screenWidth,
        screenHeight: Rt.screenHeight,
        systemInfo: Rt
    }, {
        FMNaviMode: r,
        FMNaviPriority: s,
        FMLanguageType: o,
        FMPassedLineFillMode: h,
        FMNavigation: l,
        FMNavigationDrive: It,
        FMNavigationWalk: Et
    }), Yt = (ot.window = e, {});
    for (At in Ft) Yt[At] = Ft[At];
    n.default = Yt;
} ]).default;